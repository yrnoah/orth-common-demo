{"version":3,"file":"ConfirmModal.stories-fac49806.js","sources":["../../../paas-library/src/Modal/Modal.tsx","../../../paas-library/src/Modal/ConfirmModal.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport styled, { keyframes } from \"styled-components\";\nimport { modalPortalID } from \"../Siblings/portalID\";\nimport { Portal } from \"../Siblings\";\n\nexport const defaultDuration = 200;\n\ninterface IModalProps {\n  open?: boolean;\n  /** content */\n  children?: React.ReactNode;\n  /** click function on click background layer */\n  onBGClick?: () => void;\n  /**\n   * cancel background layer\n   * @default false\n   */\n  disableBG?: boolean;\n  /**\n   * which root div will be considered as modal's parent\n   * @default ModalPortalID \"orthogonal-modals\"\n   */\n  portalID?: string;\n  /**\n   * display & dismiss animation duration\n   * @unit million seconds\n   * @default 200\n   */\n  duration?: number;\n  style?: React.CSSProperties;\n  backgroundStyle?: React.CSSProperties;\n  /** replace default bg color (rgba(0, 0, 0, 0.4)) */\n  backgroundColor?: string;\n}\n\n/**\n * @example\n * export function DemoModal() {\n *   const [open, setOpen] = useState(true);\n *   return (\n *     <Modal open={open} onBGClick={setOpen.bind(null, false)}>\n *       <>111</>\n *     </Modal>\n *   );\n * }\n */\nexport function Modal({\n  open,\n  children,\n  onBGClick,\n  disableBG,\n  portalID = modalPortalID,\n  duration = defaultDuration,\n  style,\n  backgroundColor,\n  backgroundStyle,\n}: IModalProps) {\n  const wrapperDomRef = useRef<HTMLDivElement>(null);\n  const { _open, enter, leave } = useModalEffect(\n    !!open,\n    duration,\n    wrapperDomRef.current\n  );\n  if (!_open || !children) return null;\n  return (\n    <Portal id={portalID}>\n      <ModalWrapper\n        ref={wrapperDomRef}\n        enter={enter}\n        leave={leave}\n        duration={duration}\n        style={style}\n      >\n        {!disableBG && (\n          <ModalBG\n            enter={enter}\n            leave={leave}\n            onClick={onBGClick}\n            duration={duration}\n            style={backgroundStyle}\n            backgroundColor={backgroundColor}\n          />\n        )}\n        {attachProps(children, { enter, leave })}\n      </ModalWrapper>\n    </Portal>\n  );\n}\n\nexport const attachProps = (children?: React.ReactNode, props?: object) => {\n  if (!children || !props) return children;\n  if (!React.isValidElement(children)) return children;\n  if (children instanceof Array) {\n    return children.map((child) => React.cloneElement(child, props));\n  }\n  return React.cloneElement(children, props);\n};\n\nexport function useModalEffect(\n  open: boolean,\n  duration = defaultDuration,\n  dom?: HTMLDivElement | null\n) {\n  const [_open, _setOpen] = useState(open);\n  const [_enter, _setEnter] = useState(false);\n  const [_leave, _setLeave] = useState(false);\n  useEffect(() => {\n    if (open) _setOpen(true);\n  }, [open]);\n  useEffect(() => {\n    if (_open && !open) _setLeave(true);\n  }, [open, _open]);\n  useEffect(() => {\n    if (_open) _setEnter(true);\n    if (!_open) _setEnter(false);\n  }, [_open]);\n  useEffect(() => {\n    // leave\n    if (_leave) {\n      if (dom) {\n        Promise.all(\n          dom.getAnimations({ subtree: true }).map((a) => a.finished)\n        ).then(() => {\n          _setOpen(false);\n          _setLeave(false);\n        });\n      } else {\n        const timer = window.setTimeout(() => {\n          _setOpen(false);\n          _setLeave(false);\n        }, duration);\n        return () => clearTimeout(timer);\n      }\n    }\n  }, [_leave, dom, duration]);\n  useEffect(() => {\n    // clear\n    return () => {\n      _setLeave(false);\n      _setOpen(false);\n    };\n  }, []);\n  return {\n    enter: _enter,\n    leave: _leave,\n    _open,\n  };\n}\n\ninterface AnimProps {\n  enter?: boolean;\n  leave?: boolean;\n  duration?: number;\n  backgroundColor?: string;\n}\n\nfunction getAnimBG(p: AnimProps) {\n  if (p.leave) return \"transparent\";\n  if (p.enter) return p.backgroundColor || \"rgba(0, 0, 0, 0.4)\";\n  return \"transparent\";\n}\n\nfunction getAnimOpacity(p: AnimProps) {\n  if (p.leave) return 0;\n  if (p.enter) return 1;\n  return 0;\n}\n\nexport const fadeIn = keyframes`\n  0% { opacity: 0; }\n  100% { opacity: 1; }\n`;\n\nexport const ModalWrapper = styled.div<AnimProps>`\n  ${(p) => p.theme.fixedFill}\n  z-index: ${(p) => p.theme.zIndexes.modal};\n  ${(p) => p.theme.flexCSS.column}\n  ${(p) => p.theme.flexCSS.center}\n  opacity: ${(p) => getAnimOpacity(p)};\n  animation: ${(p) => p.duration}ms ${fadeIn} ease;\n  transition: opacity ${(p) => p.duration}ms ease;\n`;\n\nexport const ModalBG = styled.div<AnimProps>`\n  ${(p) => p.theme.absoluteFillCSS}\n  background-color: ${(p) => getAnimBG(p)};\n  transition: background-color ${(p) => p.duration}ms ease;\n  touch-action: none;\n`;\n","import { Modal } from \"./Modal\";\nimport React, { useEffect, useState } from \"react\";\nimport styled, { css, useTheme } from \"styled-components\";\nimport { IconError, IconWarning } from \"../icons\";\nimport Checkbox from \"../Checkbox\";\nimport useCurrent from \"../hooks/useCurrent\";\n\nexport interface IModalProps\n  extends Omit<\n    React.HTMLAttributes<HTMLDivElement>,\n    \"title\" | \"children\" | \"onClick\"\n  > {\n  open: boolean;\n  /** @description title of the modal.  */\n  title: React.ReactNode;\n  /** @description content/subtitle of the modal.  */\n  children?: React.ReactNode;\n  /** @description replaces the icon  */\n  icon?: \"info\" | \"warning\" | \"error\" | React.ReactElement<SVGSVGElement>;\n  /**\n   * @description modal theme.\n   * @default \"standard\"\n   */\n  theme?: \"standard\" | \"dangerous\";\n  /**\n   * @description confirm button text.\n   * @default \"Confirm\"\n   */\n  confirmText?: React.ReactNode;\n  /**\n   * @description cancel button text.\n   * @default \"Cancel\"\n   */\n  cancelText?: React.ReactNode;\n  /** @description click function on click confirm button.  */\n  onConfirm?: () => void;\n  /** @description click function on click cancel button.  */\n  onCancel?: () => void;\n  /** @description click function on click background layer.  */\n  onBGClick?: () => void;\n  /**\n   * @description display once checkbox text.\n   * @default \"Don’t show again\"\n   */\n  displayOnceText?: React.ReactNode;\n  /**\n   * @description unique display once storage key.\n   * @example \"coSimulationHistoryDeleteDisplayOnce\".\n   */\n  displayOnceStorageKey?: string;\n}\n\nexport function ConfirmModal({\n  open,\n  title,\n  children,\n  icon,\n  theme = \"standard\",\n  confirmText = \"Confirm\",\n  cancelText = \"Cancel\",\n  onConfirm,\n  onCancel,\n  onBGClick,\n  displayOnceText = \"Don’t show again\",\n  displayOnceStorageKey,\n  ...rest\n}: IModalProps) {\n  const onConfirmRef = useCurrent(onConfirm);\n  const { colors } = useTheme();\n  const [checked, setChecked] = useState(false);\n  const isDisplayOnce =\n    !!displayOnceStorageKey && !!localStorage.getItem(displayOnceStorageKey);\n  const _open = open && !isDisplayOnce;\n\n  useEffect(() => {\n    if (open && isDisplayOnce) {\n      onConfirmRef.current?.();\n    }\n  }, [open, isDisplayOnce, onConfirmRef]);\n\n  const handleSetStorage = () =>\n    !!displayOnceStorageKey &&\n    checked &&\n    localStorage.setItem(displayOnceStorageKey, \"true\");\n\n  const handleConfirm = () => {\n    handleSetStorage();\n    onConfirm?.();\n  };\n\n  const handleCancel = () => {\n    handleSetStorage();\n    onCancel?.();\n  };\n\n  const handleBGClick = () => {\n    handleSetStorage();\n    onBGClick?.();\n  };\n\n  const renderIcon =\n    typeof icon === \"string\"\n      ? {\n          info: <IconWarning color={colors.brandColor.Primary6} />,\n          warning: <IconWarning color={colors.baseColor.Volcano5} />,\n          error: <IconError color={colors.baseColor.Red5} />,\n        }[icon]\n      : icon;\n\n  return (\n    <Modal open={_open} onBGClick={handleBGClick}>\n      <ModalWrapper {...rest}>\n        <Header>\n          {!!renderIcon && <Icon>{renderIcon}</Icon>}\n          <Info>\n            <Title>{title}</Title>\n            <Content>{children}</Content>\n          </Info>\n        </Header>\n        <Footer>\n          <FooterLeft>\n            {!!displayOnceStorageKey && (\n              <CheckboxWrapper>\n                <Checkbox\n                  checked={checked}\n                  onChange={() => setChecked(!checked)}\n                />\n                {displayOnceText}\n              </CheckboxWrapper>\n            )}\n          </FooterLeft>\n          <FooterRight>\n            <Btn onClick={handleCancel}>{cancelText}</Btn>\n            <Btn onClick={handleConfirm} $type={theme}>\n              {confirmText}\n            </Btn>\n          </FooterRight>\n        </Footer>\n      </ModalWrapper>\n    </Modal>\n  );\n}\n\nconst Row = styled.div`\n  ${(p) => p.theme.flex.row}\n  ${(p) => p.theme.flex.center}\n`;\n\nconst Icon = styled.div`\n  margin-right: 16px;\n\n  svg {\n    width: 24px;\n    height: 24px;\n  }\n`;\n\nconst Title = styled.div`\n  ${(p) => p.theme.fonts[\"H4/Bold\"]};\n  color: ${(p) => p.theme.colors.noColor.Grey14};\n`;\n\nconst Content = styled.div`\n  margin-top: 8px;\n  ${(p) => p.theme.fonts[\"Body-Medium/Regular\"]};\n  color: ${(p) => p.theme.colors.noColor.Grey8};\n`;\n\nconst Info = styled.div`\n  flex: 1;\n  ${(p) => p.theme.flex.column}\n  gap: 8px;\n`;\n\nconst CheckboxWrapper = styled(Row)`\n  gap: 8px;\n`;\n\nconst Btn = styled.button<{ $type?: string }>`\n  outline: none;\n  margin: 0;\n  user-select: none;\n  flex-shrink: 0;\n  height: 32px;\n  padding: 0 12px;\n  ${(p) => p.theme.flex.row}\n  ${(p) => p.theme.flex.center}\n  gap: 12px;\n  ${(p) => p.theme.fonts[\"Caption-Large/Bold\"]}\n  color: ${(p) => p.theme.colors.noColor.Grey11};\n  background: transparent;\n  border-radius: ${(p) => p.theme.radius.xs}px;\n  border: 1px solid ${(p) => p.theme.colors.noColor.Grey11};\n  transition: all 100ms linear;\n\n  &:hover {\n    cursor: pointer;\n    background: ${(p) => p.theme.colors.button.hovered};\n  }\n\n  ${(p) => {\n    switch (p.$type) {\n      case \"standard\":\n        return css`\n          background: ${(p) => p.theme.colors.priButton.default};\n          border: 1px solid ${(p) => p.theme.colors.priButton.default};\n          color: ${(p) => p.theme.colors.brandColor.Primary8};\n\n          &:hover {\n            cursor: pointer;\n            background: ${(p) => p.theme.colors.priButton.hovered};\n            border: 1px solid ${(p) => p.theme.colors.priButton.hovered};\n          }\n        `;\n      case \"dangerous\":\n        return css`\n          background: ${(p) => p.theme.colors.baseColor.Red2};\n          border: 1px solid ${(p) => p.theme.colors.baseColor.Red2};\n          color: ${(p) => p.theme.colors.baseColor.Red6};\n\n          &:hover {\n            cursor: pointer;\n            background: ${(p) => p.theme.colors.baseColor.Red3};\n            border: 1px solid ${(p) => p.theme.colors.baseColor.Red3};\n          }\n        `;\n    }\n  }}\n`;\n\nconst Header = styled.div`\n  padding: 24px;\n  ${(p) => p.theme.flex.row}\n  justify-content: space-between;\n`;\n\nconst FooterLeft = styled(Row)`\n  gap: 8px;\n  ${(p) => p.theme.fonts[\"Body-Medium/Regular\"]}\n  color:${(p) => p.theme.colors.noColor.Grey14};\n`;\n\nconst FooterRight = styled(Row)`\n  justify-content: flex-end;\n  gap: 8px;\n`;\n\nconst Footer = styled(Row)`\n  padding: 16px 24px;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst ModalWrapper = styled.div`\n  width: 400px;\n  padding: ${(p) => p.theme.padding.xxxxs}px;\n  ${(p) => p.theme.flex.column}\n  gap: ${(p) => p.theme.padding.xxxxs}px;\n  z-index: ${(p) => p.theme.zIndexes.modal};\n  border-radius: ${(p) => p.theme.radius.l}px;\n  background: #fff;\n  box-shadow: ${(p) => p.theme.colors.hardShadow};\n`;\n"],"names":["defaultDuration","Modal","open","children","onBGClick","disableBG","modalPortalID","style","backgroundColor","wrapperDomRef","useRef","_open","enter","leave","jsx","Portal","portalID","jsxs","ModalWrapper","duration","ModalBG","backgroundStyle","attachProps","props","React","child","useModalEffect","dom","_setOpen","useState","_enter","_setEnter","_leave","_setLeave","useEffect","Promise","a","timer","getAnimBG","p","getAnimOpacity","fadeIn","keyframes","styled","div","fixedFill","modal","column","center","absoluteFillCSS","ConfirmModal","title","icon","confirmText","cancelText","onConfirm","onCancel","displayOnceStorageKey","onConfirmRef","useCurrent","colors","checked","setChecked","isDisplayOnce","handleSetStorage","handleConfirm","handleCancel","handleBGClick","renderIcon","IconWarning","IconError","rest","Header","Icon","Info","Title","Content","Footer","FooterLeft","CheckboxWrapper","Checkbox","displayOnceText","FooterRight","Btn","theme","Row","row","button","Grey11","xs","hovered","css","default","Primary8","Red2","Red6","Red3","xxxxs","l"],"mappings":"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"}