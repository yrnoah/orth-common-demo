{"version":3,"file":"CreateButton.stories-b0fd5eb9.js","sources":["../../../paas-library/src/DynamicMenu/common.ts","../../../paas-library/src/Buttons/MaskedButton.tsx"],"sourcesContent":["import {\n  AsyncResult,\n  SpringConfig,\n  SpringProps,\n  SpringValue,\n  easings,\n} from \"@react-spring/web\";\nimport { TAnchor, ThemeEnumType } from \"./types\";\n\nexport const PADDING = 6 as const;\nexport const GAP = 4 as const;\n\n/** Minimum size of the Dynamic-Menu in pixels. */\nexport const DEFAULT_SIZE = 52 as const;\nexport const FORM_ROW_HEIGHT = 36 as const;\n/** in ms */\nexport enum EAnimDuration {\n  FAST = 150,\n  STANDARD = 300,\n  SLOW = 500,\n}\n\nexport enum EStage {\n  enter = \"enter\",\n  default = \"default\",\n  exit = \"exit\",\n}\n\nexport const configLinearFast = {\n  easing: easings.linear,\n  duration: EAnimDuration.FAST,\n} as SpringConfig;\nexport const configEaseInOutStandard = {\n  easing: easings.easeInOutQuad,\n  duration: EAnimDuration.STANDARD,\n} as SpringConfig;\nexport const configEaseOutStandard = {\n  easing: easings.easeOutQuad,\n  duration: EAnimDuration.STANDARD,\n} as SpringConfig;\nexport const configEaseInOutSlow = {\n  easing: easings.easeInOutQuad,\n  duration: EAnimDuration.SLOW,\n} as SpringConfig;\nexport const configEaseOutSlow = {\n  easing: easings.easeOutQuad,\n  duration: EAnimDuration.SLOW,\n} as SpringConfig;\nexport const configExaggerated = {\n  friction: 15,\n  tension: 100,\n  mass: 1,\n} as SpringConfig;\n\ntype Result = AsyncResult<SpringValue<number>> | Promise<any>;\nexport interface Control {\n  x?: number;\n  y?: number;\n  width?: number;\n  height?: number;\n  config?: SpringProps<any>;\n  opacity?: number;\n}\nexport interface IDynamicMenuControllerContext {\n  /** @deprecated use scaleSizeTo instead  */\n  startSizeTo?: (control: Control, delay?: number) => Result;\n  /** @deprecated use scaleSizeTo instead  */\n  returnToInitialStyle?: () => Result;\n  scaleSizeTo?: (control: Control) => Result;\n  /** @deprecated use scaleSizeTo instead  */\n  scaleToInitialSize?: (config?: SpringProps<any>) => Result;\n  setSizeTo?: (control: Control) => void;\n  menuX?: SpringValue<number>;\n  menuY?: SpringValue<number>;\n  menuWidth?: SpringValue<number>;\n  menuHeight?: SpringValue<number>;\n  menuOpacity?: SpringValue<number>;\n}\n\nexport interface IDymenuThemeContext {\n  currentTheme: ThemeEnumType;\n}\n\nexport interface IDynamicActorController {\n  x?: SpringValue<number>;\n  y?: SpringValue<number>;\n  opacity?: SpringValue<number>;\n  scale?: SpringValue<number>;\n}\n\nexport function getAnchorOffset(\n  width: number,\n  height: number,\n  anchor: TAnchor\n): { x: number; y: number } {\n  switch (anchor) {\n    case \"top-left\":\n      return { x: 0, y: 0 };\n    case \"top\":\n      return { x: width / 2, y: 0 };\n    case \"top-right\":\n      return { x: width, y: 0 };\n    case \"left\":\n      return { x: 0, y: height / 2 };\n    case \"center\":\n      return { x: width / 2, y: height / 2 };\n    case \"right\":\n      return { x: width, y: height / 2 };\n    case \"bottom-left\":\n      return { x: 0, y: height };\n    case \"bottom\":\n      return { x: width / 2, y: height };\n    case \"bottom-right\":\n      return { x: width, y: height };\n  }\n}\n\nexport const cssStatic = {\n  background: \"none\",\n  cursor: \"default\",\n  pointerEvents: \"none\",\n} as const;\n","import { animated, useSpring } from \"@react-spring/web\";\nimport { HTMLAttributes, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { configLinearFast } from \"../DynamicMenu\";\n\ninterface Props extends HTMLAttributes<HTMLButtonElement> {\n  maskText?: string;\n}\nexport function MaskedButton({ maskText, children, ...props }: Props) {\n  const [hover, setHover] = useState(false);\n  const [opacity] = useSpring(\n    () => ({\n      from: { opacity: 0 },\n      to: { opacity: hover ? 1 : 0 },\n      config: configLinearFast,\n    }),\n    [hover]\n  );\n  return (\n    <MaskedButtonWrapper\n      {...props}\n      onMouseEnter={(e) => {\n        setHover(true);\n        props.onMouseEnter?.(e);\n      }}\n      onMouseLeave={(e) => {\n        setHover(false);\n        props.onMouseLeave?.(e);\n      }}\n    >\n      {children}\n      <MaskedButtonMask style={opacity}>{maskText}</MaskedButtonMask>\n    </MaskedButtonWrapper>\n  );\n}\n\nconst MaskedButtonWrapper = styled.button`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: white;\n  border: 1px solid ${(p) => p.theme.colors.noColor.Grey4};\n  border-radius: 3px;\n`;\n\nconst MaskedButtonMask = styled(animated.div)`\n  position: absolute;\n  top: 0;\n  left: 0;\n  color: ${(p) => p.theme.colors.noColor.Grey4};\n  background-color: ${(p) => p.theme.colors.Neutral_400};\n  cursor: pointer;\n  text-align: start;\n  border-radius: 3px;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  ${(p) => p.theme.flexCSS.center}\n  padding: 12px;\n  box-sizing: border-box;\n`;\n"],"names":["configLinearFast","easing","easings","linear","duration","EAnimDuration","MaskedButton","maskText","children","hover","setHover","useState","opacity","useSpring","jsxs","MaskedButtonWrapper","props","e","styled","button","MaskedButtonMask","animated","p","Grey4","Neutral_400"],"mappings":"+UA4BO,MAAMA,EAAmB,CAC9BC,OAAQC,EAAQC,OAChBC,SAAUC,GACZ,ECvBO,SAAAC,EAAA,CAAsB,SAAAC,EAAEA,SAAAA,EAAUC,GAAAA,CAA0B,EAAA,CACjE,KAAA,CAAAC,EAAAC,CAAA,EAAAC,EAAA,SAAA,EAAA,EACA,CAAAC,CAAA,EAAAC,EAAA,KAAA,CACS,KAAA,CACC,QAAA,CAAW,EAAE,GAAA,CACf,QAAAJ,EAAA,EAAA,CAAuB,EAAE,OAAAT,CACrBA,GAAAA,CAAAA,CAAAA,CAAAA,EAIZ,OAAAc,EAAAA,KAAAC,EAAA,CAAA,GAAAC,EAAA,aAAAC,GAAA,OAIMP,EAAAA,EAAAA,GACAM,EAAAA,EAAAA,eAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAsB,EAAA,aAAAC,GAAA,OAGtBP,EAAAA,EAAAA,GACAM,EAAAA,EAAAA,eAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAsB,EAAA,SAAA,CAGvBR,EAAAA,EAAAA,IAAAA,EAAAA,CAAAA,MAAAA,EAAAA,SAAAA,EAAAA,CAC2C,CAAA,CAAA,CAGlD,CAEA,MAAAO,EAAAG,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAmCC,GAAAA,EAAAA,MAAAA,OAAAA,QAAAA;AAAAA;AAAAA,EAUnCC,EAAAF,EAAAG,EAAA,GAAA;AAAA;AAAA;AAAA;AAAA,WAA4CC,GAAAA,EAAA,MAAA,OAAA,QAAA;AAAA,sBAIHC,GAAAA,EAAAA,MAAAA,OAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,IACGC,GAAAA,EAAAA,MAAAA,QAAAA;AAAAA;AAAAA;AAAAA;;;;;;;;;;;;;;;;;;;;;;"}