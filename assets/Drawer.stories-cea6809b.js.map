{"version":3,"file":"Drawer.stories-cea6809b.js","sources":["../../../paas-library/src/Drawer/store.ts","../../../paas-library/src/Drawer/Drawer.tsx"],"sourcesContent":["import { useState, useCallback, useEffect } from \"react\";\nimport { createContainer } from \"unstated-next\";\n\nexport type AnimationStage =\n  | \"entering\"\n  | \"entered\"\n  | \"leaving\"\n  // | \"leaved\"\n  | \"none\";\n\nexport const animationStageDuration = 400;\n\nfunction useDrawer(initialState = { duration: animationStageDuration }) {\n  const [animatingStage, setAnimatingStage] = useState<AnimationStage>(\"none\");\n  useEffect(() => {\n    // leaving -> none\n    if (animatingStage === \"leaving\") {\n      const timer = setTimeout(() => {\n        setAnimatingStage(\"none\");\n      }, initialState.duration);\n      return () => clearTimeout(timer);\n    }\n    // entering -> entered\n    if (animatingStage === \"entering\") {\n      const timer = setTimeout(() => {\n        setAnimatingStage((pre) => (pre === \"entering\" ? \"entered\" : pre));\n      }, initialState.duration);\n      return () => clearTimeout(timer);\n    }\n  }, [animatingStage, initialState.duration]);\n  const onSetAnimatingStage = useCallback(\n    (v: React.SetStateAction<AnimationStage>) => {\n      if (typeof v === \"function\") {\n        return setAnimatingStage(v);\n      }\n      setAnimatingStage((pre) => {\n        if (pre === \"none\" && v === \"leaving\") return \"none\";\n        return v;\n      });\n    },\n    []\n  );\n  return { animatingStage, onSetAnimatingStage } as const;\n}\n\nconst container = createContainer(useDrawer);\n\nexport const DrawerStageProvider = container.Provider;\n\nexport const useDrawerStage = container.useContainer;\n\nexport default container;\n","import { memo, forwardRef, useImperativeHandle } from \"react\";\nimport styled, { css, keyframes } from \"styled-components\";\nimport { Portal } from \"../Siblings\";\nimport { drawerPortalID } from \"../Siblings/portalID\";\nimport {\n  DrawerStageProvider,\n  useDrawerStage,\n  animationStageDuration,\n} from \"./store\";\n\nexport type DrawerAPI = {\n  open: () => void;\n  close: () => void;\n  toggle: () => boolean;\n};\n\nexport type DrawerPosition = \"right\" | \"left\" | \"top\" | \"bottom\";\n\nexport interface DrawerProps {\n  children: React.ReactNode;\n  /**\n   * @description when position is right or left -> drawer width; when position is top or bottom -> drawer height\n   * @default max-content\n   */\n  size: string | number;\n  /** @description wrapper styles */\n  wrapperStyles?: React.CSSProperties;\n  /**\n   * @description millionSeconds duration for animation\n   * @default 400\n   */\n  duration?: number;\n  /** @default right */\n  position?: DrawerPosition;\n  /** @default \"orthogonal-drawer\" */\n  portalID?: string;\n}\n\nconst Drawer = forwardRef((props: DrawerProps, ref) => {\n  if (!props.children) {\n    throw new Error(\"Please set drawer content.\");\n  }\n  return (\n    <DrawerStageProvider\n      initialState={{ duration: props?.duration || animationStageDuration }}\n    >\n      <DrawerContent {...props} ref={ref} />\n    </DrawerStageProvider>\n  );\n});\nconst DrawerContent = forwardRef((props: DrawerProps, ref) => {\n  const {\n    size = \"max-content\",\n    children,\n    wrapperStyles,\n    duration,\n    position = \"right\",\n    portalID = drawerPortalID,\n  } = props;\n  const { onSetAnimatingStage, animatingStage } = useDrawerStage();\n  const isOpen = animatingStage !== \"none\";\n  const isHorizontal = position === \"right\" || position === \"left\";\n  const width = isHorizontal ? size : undefined;\n  const height = isHorizontal ? undefined : size;\n  const active = animatingStage === \"entering\" || animatingStage === \"entered\";\n  useImperativeHandle(\n    ref,\n    () => {\n      return {\n        open() {\n          onSetAnimatingStage(\"entering\");\n        },\n        close() {\n          onSetAnimatingStage(\"leaving\");\n        },\n        /** @return toOpen */\n        toggle(): boolean {\n          let toOpen: boolean = false;\n          let toState = animatingStage;\n          switch (animatingStage) {\n            default:\n            case \"entering\":\n            case \"entered\":\n              toState = \"leaving\";\n              break;\n            case \"leaving\":\n            case \"none\":\n              toOpen = true;\n              toState = \"entering\";\n              break;\n          }\n          onSetAnimatingStage(toState);\n          return toOpen;\n        },\n      } as const;\n    },\n    [onSetAnimatingStage, animatingStage]\n  );\n  if (!isOpen) return null;\n  if (isHorizontal && !(size || wrapperStyles?.width)) return null;\n  if (!isHorizontal && !(size || wrapperStyles?.height)) return null;\n  return (\n    <Portal id={portalID}>\n      <Wrapper\n        style={{ ...(wrapperStyles || {}), width, height }}\n        position={position}\n        duration={duration || animationStageDuration}\n        active={active}\n      >\n        {children}\n      </Wrapper>\n    </Portal>\n  );\n});\n\nexport default memo(Drawer);\n\nconst showFromRight = keyframes`\n  0% { transform: translateX(100%) }\n  100% { transform: translateX(0) }\n`;\nconst showFromLeft = keyframes`\n  0% { transform: translateX(-100%) }\n  100% { transform: translateX(0) }\n`;\nconst showFromTop = keyframes`\n  0% { transform: translateY(-100%) }\n  100% { transform: translateY(0) }\n`;\nconst showFromBottom = keyframes`\n  0% { transform: translateY(100%) }\n  100% { transform: translateY(0) }\n`;\n\nconst Wrapper = styled.div<{\n  active: boolean;\n  duration: number;\n  position: DrawerPosition;\n}>`\n  position: fixed;\n  overflow: hidden;\n  transition: transform ${(p) => p.duration}ms ease;\n  box-shadow: 0 0 20px 0 #0000000d;\n\n  ${({ position, duration }) => {\n    if (position === \"right\") {\n      return css`\n        top: 0;\n        right: 0;\n        bottom: 0;\n        animation: ${showFromRight} ${duration}ms ease;\n      `;\n    }\n    if (position === \"left\") {\n      return css`\n        top: 0;\n        left: 0;\n        bottom: 0;\n        animation: ${showFromLeft} ${duration}ms ease;\n      `;\n    }\n    if (position === \"top\") {\n      return css`\n        left: 0;\n        right: 0;\n        top: 0;\n        animation: ${showFromTop} ${duration}ms ease;\n      `;\n    }\n    if (position === \"bottom\") {\n      return css`\n        left: 0;\n        right: 0;\n        bottom: 0;\n        animation: ${showFromBottom} ${duration}ms ease;\n      `;\n    }\n    return undefined;\n  }}\n\n  ${({ active }) => {\n    if (active) {\n      return css`\n        pointer-events: auto;\n      `;\n    }\n    return css`\n      pointer-events: none;\n      animation: none;\n    `;\n  }}\n\n  ${({ active, position }) => {\n    // position right\n    if (position === \"right\" && active) {\n      return css`\n        transform: translateX(0);\n      `;\n    }\n    if (position === \"right\" && !active) {\n      return css`\n        transform: translateX(100%);\n      `;\n    }\n    // position left\n    if (position === \"left\" && active) {\n      return css`\n        transform: translateX(0);\n      `;\n    }\n    if (position === \"left\" && !active) {\n      return css`\n        transform: translateX(-100%);\n      `;\n    }\n    // position top\n    if (position === \"top\" && active) {\n      return css`\n        transform: translateY(0);\n      `;\n    }\n    if (position === \"top\" && !active) {\n      return css`\n        transform: translateY(-100%);\n      `;\n    }\n    // position bottom\n    if (position === \"bottom\" && active) {\n      return css`\n        transform: translateY(0);\n      `;\n    }\n    if (position === \"bottom\" && !active) {\n      return css`\n        transform: translateY(100%);\n      `;\n    }\n    return undefined;\n  }}\n`;\n"],"names":["animationStageDuration","useDrawer","initialState","duration","animatingStage","setAnimatingStage","useState","useEffect","timer","setTimeout","clearTimeout","pre","onSetAnimatingStage","useCallback","v","container","createContainer","DrawerStageProvider","Provider","useDrawerStage","useContainer","Drawer","forwardRef","props","ref","jsx","DrawerContent","size","children","wrapperStyles","portalID","drawerPortalID","isOpen","isHorizontal","position","width","height","active","useImperativeHandle","toOpen","toState","Portal","Wrapper","Drawer$2","memo","showFromRight","keyframes","showFromLeft","showFromTop","showFromBottom","styled","div","css"],"mappings":"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"}