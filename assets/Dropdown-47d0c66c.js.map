{"version":3,"file":"Dropdown-47d0c66c.js","sources":["../../../../node_modules/react-use/esm/useClickAway.js","../../../../node_modules/react-use/esm/useEffectOnce.js","../../../../node_modules/react-use/esm/useUnmount.js","../../../../node_modules/react-use/esm/useRafState.js","../../../../node_modules/react-use/esm/useMouseWheel.js","../../../../node_modules/react-use/esm/useScroll.js","../../../../node_modules/react-use/esm/useWindowScroll.js","../../../paas-library/src/Dropdown/useDropdownPosition.ts","../../../paas-library/src/utils/isChildrenElement.ts","../../../paas-library/src/Dropdown/Dropdown.tsx"],"sourcesContent":["import { useEffect, useRef } from 'react';\nimport { off, on } from './misc/util';\nvar defaultEvents = ['mousedown', 'touchstart'];\nvar useClickAway = function (ref, onClickAway, events) {\n    if (events === void 0) { events = defaultEvents; }\n    var savedCallback = useRef(onClickAway);\n    useEffect(function () {\n        savedCallback.current = onClickAway;\n    }, [onClickAway]);\n    useEffect(function () {\n        var handler = function (event) {\n            var el = ref.current;\n            el && !el.contains(event.target) && savedCallback.current(event);\n        };\n        for (var _i = 0, events_1 = events; _i < events_1.length; _i++) {\n            var eventName = events_1[_i];\n            on(document, eventName, handler);\n        }\n        return function () {\n            for (var _i = 0, events_2 = events; _i < events_2.length; _i++) {\n                var eventName = events_2[_i];\n                off(document, eventName, handler);\n            }\n        };\n    }, [events, ref]);\n};\nexport default useClickAway;\n","import { useEffect } from 'react';\nvar useEffectOnce = function (effect) {\n    useEffect(effect, []);\n};\nexport default useEffectOnce;\n","import { useRef } from 'react';\nimport useEffectOnce from './useEffectOnce';\nvar useUnmount = function (fn) {\n    var fnRef = useRef(fn);\n    // update the ref each render so if it change the newest callback will be invoked\n    fnRef.current = fn;\n    useEffectOnce(function () { return function () { return fnRef.current(); }; });\n};\nexport default useUnmount;\n","import { useCallback, useRef, useState } from 'react';\nimport useUnmount from './useUnmount';\nvar useRafState = function (initialState) {\n    var frame = useRef(0);\n    var _a = useState(initialState), state = _a[0], setState = _a[1];\n    var setRafState = useCallback(function (value) {\n        cancelAnimationFrame(frame.current);\n        frame.current = requestAnimationFrame(function () {\n            setState(value);\n        });\n    }, []);\n    useUnmount(function () {\n        cancelAnimationFrame(frame.current);\n    });\n    return [state, setRafState];\n};\nexport default useRafState;\n","import { useEffect, useState } from 'react';\nimport { off, on } from './misc/util';\nexport default (function () {\n    var _a = useState(0), mouseWheelScrolled = _a[0], setMouseWheelScrolled = _a[1];\n    useEffect(function () {\n        var updateScroll = function (e) {\n            setMouseWheelScrolled(e.deltaY + mouseWheelScrolled);\n        };\n        on(window, 'wheel', updateScroll, false);\n        return function () { return off(window, 'wheel', updateScroll); };\n    });\n    return mouseWheelScrolled;\n});\n","import { useEffect } from 'react';\nimport useRafState from './useRafState';\nimport { off, on } from './misc/util';\nvar useScroll = function (ref) {\n    if (process.env.NODE_ENV === 'development') {\n        if (typeof ref !== 'object' || typeof ref.current === 'undefined') {\n            console.error('`useScroll` expects a single ref argument.');\n        }\n    }\n    var _a = useRafState({\n        x: 0,\n        y: 0,\n    }), state = _a[0], setState = _a[1];\n    useEffect(function () {\n        var handler = function () {\n            if (ref.current) {\n                setState({\n                    x: ref.current.scrollLeft,\n                    y: ref.current.scrollTop,\n                });\n            }\n        };\n        if (ref.current) {\n            on(ref.current, 'scroll', handler, {\n                capture: false,\n                passive: true,\n            });\n        }\n        return function () {\n            if (ref.current) {\n                off(ref.current, 'scroll', handler);\n            }\n        };\n    }, [ref]);\n    return state;\n};\nexport default useScroll;\n","import { useEffect } from 'react';\nimport { isBrowser, off, on } from './misc/util';\nimport useRafState from './useRafState';\nvar useWindowScroll = function () {\n    var _a = useRafState(function () { return ({\n        x: isBrowser ? window.pageXOffset : 0,\n        y: isBrowser ? window.pageYOffset : 0,\n    }); }), state = _a[0], setState = _a[1];\n    useEffect(function () {\n        var handler = function () {\n            setState(function (state) {\n                var pageXOffset = window.pageXOffset, pageYOffset = window.pageYOffset;\n                //Check state for change, return same state if no change happened to prevent rerender\n                //(see useState/setState documentation). useState/setState is used internally in useRafState/setState.\n                return state.x !== pageXOffset || state.y !== pageYOffset\n                    ? {\n                        x: pageXOffset,\n                        y: pageYOffset,\n                    }\n                    : state;\n            });\n        };\n        //We have to update window scroll at mount, before subscription.\n        //Window scroll may be changed between render and effect handler.\n        handler();\n        on(window, 'scroll', handler, {\n            capture: false,\n            passive: true,\n        });\n        return function () {\n            off(window, 'scroll', handler);\n        };\n    }, []);\n    return state;\n};\nexport default useWindowScroll;\n","import { useEffect, useState, useCallback, useRef } from \"react\";\nimport { useRafState } from \"react-use\";\nimport useCurrent from \"../hooks/useCurrent\";\n\nexport type TDropdownPosition =\n  | \"top-left\"\n  | \"top-right\"\n  | \"bottom-left\"\n  | \"bottom-right\"\n  | \"top\"\n  | \"bottom\"\n  | \"auto\"\n  | undefined;\n\nexport function useDropdownPosition<T = HTMLDivElement>(\n  overlayHeight: number = 300,\n  overlayWidth: number = 0,\n  offsetHeight: number = 40,\n  persistDown: boolean = false,\n  position?: TDropdownPosition,\n  fitToTrigger: boolean = false\n) {\n  const ref = useRef<T>(null);\n  const [top, setTop] = useRafState(0);\n  const [left, setLeft] = useRafState(0);\n  const [width, setWidth] = useState(120);\n  const [height, setHeight] = useState(offsetHeight);\n  const [isTop, setISTop] = useState(() => {\n    switch (position) {\n      default:\n        return false;\n      case \"top\":\n      case \"top-left\":\n      case \"top-right\":\n        return true;\n    }\n  });\n  const updateRect = useCallback(\n    (data: DOMRect, targetHeight: number = 300) => {\n      const triggerHeight = fitToTrigger ? 0 : height;\n      setWidth(data.width);\n      if (data.height) setHeight(data.height);\n      const optionWidth = overlayWidth || data.width;\n      const diff = window.innerHeight - data.bottom;\n      const shouldPositionRight =\n        data.left + optionWidth - window.innerWidth > 0 && optionWidth > 0;\n      let shouldTop = diff < targetHeight;\n      if (\n        persistDown ||\n        position === \"bottom\" ||\n        position === \"bottom-left\" ||\n        position === \"bottom-right\"\n      ) {\n        shouldTop = false;\n      }\n      if (\n        position === \"top\" ||\n        position === \"top-left\" ||\n        position === \"top-right\"\n      ) {\n        shouldTop = true;\n      }\n      if (data.top < targetHeight) shouldTop = false;\n      // set to bottom\n      if (data.top !== top && !shouldTop) {\n        let setToBottomValue = (data.top || 0) + triggerHeight;\n        /** @description move overlay upon view bottom */\n        if (\n          fitToTrigger &&\n          setToBottomValue + overlayHeight > window.innerHeight\n        ) {\n          setToBottomValue = window.innerHeight - overlayHeight - height;\n        }\n        setTop(setToBottomValue);\n      }\n      // set to top\n      if (shouldTop && top !== data.top - targetHeight) {\n        let setToTopValue = data.top - targetHeight;\n        if (fitToTrigger) setToTopValue = setToTopValue + height;\n        setTop(setToTopValue);\n      }\n      // align to right\n      if (position === \"bottom-right\" || position === \"top-right\") {\n        setLeft(data.left - optionWidth + data.width);\n        return;\n      }\n      // align to center\n      if (position === \"bottom\" || position === \"top\") {\n        // can not count scroll bar width\n        setLeft(data.left - (optionWidth - data.width) * 0.5);\n        return;\n      }\n      // align to left\n      if (position === \"bottom-left\" || position === \"top-left\") {\n        setLeft(data.left || 0);\n        return;\n      }\n      // auto align\n      setISTop(shouldTop);\n      if (!shouldPositionRight) setLeft(data.left || 0);\n      if (shouldPositionRight) setLeft(data.left - optionWidth + data.width);\n    },\n    [\n      overlayWidth,\n      overlayHeight,\n      persistDown,\n      position,\n      top,\n      setTop,\n      height,\n      setLeft,\n      fitToTrigger,\n    ]\n  );\n  const onHoverUpdateRect = useCallback(() => {\n    const target = ref.current as unknown as HTMLDivElement;\n    if (!(target && target.getBoundingClientRect)) return;\n    updateRect(target.getBoundingClientRect(), overlayHeight);\n  }, [overlayHeight, ref, updateRect]);\n  const updateFuncRef = useCurrent(onHoverUpdateRect);\n  useEffect(() => {\n    updateFuncRef.current();\n  }, [updateFuncRef, overlayHeight, ref]);\n  return {\n    onHoverUpdateRect,\n    updateRect,\n    top: Math.max(top, 0),\n    isTop,\n    left,\n    width,\n    height,\n    ref,\n  };\n}\n","import { isValidElement } from \"react\";\n\nexport function isChildrenElement(children: React.ReactNode) {\n  if (Array.isArray(children)) return false;\n  switch (typeof children) {\n    default:\n      return false;\n    case \"string\":\n    case \"number\":\n    case \"bigint\":\n    case \"boolean\":\n    case \"undefined\":\n      return false;\n    case \"object\":\n    case \"function\":\n    case \"symbol\":\n      return isValidElement(children);\n  }\n}\n","import {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n  cloneElement,\n} from \"react\";\nimport {\n  useMeasure,\n  useClickAway,\n  useMouseWheel,\n  useWindowScroll,\n  useScroll,\n} from \"react-use\";\nimport styled from \"styled-components\";\nimport { Portal } from \"../Siblings\";\nimport { TDropdownPosition, useDropdownPosition } from \"./useDropdownPosition\";\nimport useCurrent from \"../hooks/useCurrent\";\nimport { dropdownPortalID } from \"../Siblings/portalID\";\nimport { isChildrenElement } from \"../utils/isChildrenElement\";\n\nexport interface DropdownProps {\n  /**\n   * trigger component\n   */\n  children?: React.ReactNode;\n  /**\n   * @default \"click\"\n   */\n  triggerType?: \"click\" | \"hover\";\n  /**\n   * dropdown component\n   */\n  overlay?: React.ReactNode;\n  /**\n   * trigger wrapper styles\n   */\n  style?: React.CSSProperties;\n  /**\n   * dropdown wrapper styles\n   */\n  overlayContainerStyle?: React.CSSProperties;\n  /**\n   * @default undefined = auto\n   * dropdown position: \"top-left\" | \"top-right\" | \"bottom-left\" | \"bottom-right\" | \"top\" | \"bottom\" | undefined = auto\n   */\n  position?: TDropdownPosition;\n  /**\n   * dropdown visible\n   */\n  visible?: boolean;\n  /**\n   * dropdown visible onChange callback\n   */\n  onVisibleChange?: (visible: boolean) => void;\n  /**\n   * disable the auto dismiss when user click or scroll outside\n   */\n  disableAutoDismiss?: boolean;\n  /**\n   * disable dropdown enter & leave default animation\n   */\n  disableAnimation?: boolean;\n  /**\n   * ID of the dom element, which will be insert the dropdown items\n   * @default dropdownPortalID (`orthogonal-dropdown-overlay`)\n   */\n  parentNodeID?: string;\n  /** the scroll element ref, add listener to watch scroll event */\n  scrollRef?: React.RefObject<HTMLElement>;\n  /**\n   * @default false\n   * @description when set to true, overlay position should cover trigger\n   */\n  fitToTrigger?: boolean;\n}\n\nexport function BaseDropdown(props: DropdownProps) {\n  const {\n    overlayContainerStyle,\n    visible,\n    onVisibleChange,\n    disableAnimation,\n    disableAutoDismiss,\n    parentNodeID = dropdownPortalID,\n    scrollRef,\n    triggerType = \"click\",\n    fitToTrigger = false,\n  } = props;\n  const isHover = useRef(false);\n  const [overlayRef, { height: overlayHeight, width: overlayWidth }] =\n    useMeasure();\n  const onVisibleCallbackRef = useCurrent(onVisibleChange);\n  const [_visible, setVisible] = useState(!!visible);\n  // sync with parent state\n  useEffect(() => {\n    setVisible((curVisible) => {\n      if (curVisible !== visible) return !!visible;\n      return curVisible;\n    });\n  }, [visible]);\n  useEffect(() => {\n    if (onVisibleCallbackRef.current) onVisibleCallbackRef.current(_visible);\n  }, [_visible, onVisibleCallbackRef]);\n  const initd = !!overlayHeight && !!overlayWidth;\n  const { ref, top, left, onHoverUpdateRect, isTop } = useDropdownPosition(\n    overlayHeight,\n    overlayWidth,\n    32, // default height, will be replace automatically when get the overlay rect height\n    false,\n    props.position,\n    fitToTrigger\n  );\n  /** @tip handle auto dismiss when click */\n  useClickAway(ref, () => {\n    if (disableAutoDismiss) return;\n    if (isHover.current) return;\n    setVisible(false);\n  });\n  /** @tip handle auto dismiss when mouse wheel */\n  const mouseWheel = useMouseWheel();\n  useEffect(() => {\n    if (disableAutoDismiss) {\n      onHoverUpdateRect();\n      return;\n    }\n    if (isHover.current) return;\n    if (!mouseWheel) return;\n    setVisible(false);\n  }, [mouseWheel, disableAutoDismiss, onHoverUpdateRect]);\n  /** @tip handle auto dismiss when scroll */\n  const { x, y } = useWindowScroll();\n  const _scrollRef = useRef(null);\n  const { x: containerX, y: containerY } = useScroll(scrollRef || _scrollRef);\n  useEffect(() => {\n    if (disableAutoDismiss) {\n      onHoverUpdateRect();\n      return;\n    }\n    if (isHover.current) return;\n    if (!x && !y && !containerX && !containerY) return;\n    setVisible(false);\n  }, [disableAutoDismiss, onHoverUpdateRect, x, y, containerX, containerY]);\n  const _overlayContainerStyle: React.CSSProperties = useMemo(() => {\n    const opacity = initd && _visible ? 1 : 0;\n    const pointerEvents = initd && _visible ? \"auto\" : \"none\";\n    const transitionTopOffset = fitToTrigger ? 1 : 1.1;\n    const transitionBottomOffset = fitToTrigger ? 1 : 0.9;\n    let _top = _visible ? top : top * transitionBottomOffset;\n    if (isTop) _top = _visible ? top : top * transitionTopOffset;\n    if (disableAnimation) _top = top;\n    return {\n      transition: disableAnimation ? \"none\" : undefined,\n      pointerEvents,\n      opacity,\n      ...(overlayContainerStyle || {}),\n      zIndex: _visible ? overlayContainerStyle?.zIndex : -1,\n      top: _top,\n      left,\n    };\n  }, [\n    initd,\n    _visible,\n    top,\n    isTop,\n    disableAnimation,\n    overlayContainerStyle,\n    left,\n    fitToTrigger,\n  ]);\n  const _onMouseEnter = useCallback(() => {\n    isHover.current = true;\n    if (triggerType === \"hover\") setVisible(true);\n    onHoverUpdateRect();\n  }, [onHoverUpdateRect, triggerType]);\n  const isSingleElement = isChildrenElement(props.children);\n  return (\n    <>\n      {/* will generate extra wrapper */}\n      {isSingleElement &&\n        cloneElement(props.children as unknown as JSX.Element, {\n          ref: (element: Element) => {\n            // function\n            if (\n              \"ref\" in (props.children as any) &&\n              typeof (props.children as any).ref === \"function\"\n            ) {\n              (props.children as any).ref(element);\n            }\n            // useRef\n            if (\n              \"ref\" in (props.children as any) &&\n              typeof (props.children as any).ref === \"object\" &&\n              (props.children as any).ref\n            ) {\n              if (\"current\" in (props.children as any).ref)\n                (props.children as any).ref.current = element;\n            }\n            (ref.current as any) = element;\n          },\n          onMouseEnter: (e: MouseEvent) => {\n            if ((props.children as any).props.onMouseEnter)\n              (props.children as any).props.onMouseEnter(e);\n            _onMouseEnter();\n          },\n          onMouseLeave: (e: MouseEvent) => {\n            if ((props.children as any).props.onMouseLeave)\n              (props.children as any).props.onMouseLeave(e);\n            isHover.current = false;\n            if (triggerType === \"hover\") setVisible(false);\n          },\n        })}\n      {/* will not generate extra wrapper */}\n      {!isSingleElement && (\n        <Wrapper\n          ref={ref}\n          style={props.style}\n          onMouseEnter={_onMouseEnter}\n          onMouseLeave={() => {\n            isHover.current = false;\n            if (triggerType === \"hover\") setVisible(false);\n          }}\n          role=\"select\"\n        >\n          {props.children}\n        </Wrapper>\n      )}\n      {!!props.overlay && (\n        <Portal id={parentNodeID}>\n          <OverlayWrapper\n            style={_overlayContainerStyle}\n            ref={(el) => el && overlayRef(el)}\n            onMouseEnter={_onMouseEnter}\n            onMouseLeave={() => {\n              isHover.current = false;\n              if (triggerType === \"hover\") setVisible(false);\n            }}\n          >\n            {props.overlay}\n          </OverlayWrapper>\n        </Portal>\n      )}\n    </>\n  );\n}\n\nconst Wrapper = styled.div`\n  position: relative;\n  display: flex;\n  flex: none;\n  width: max-content;\n  align-items: center;\n  box-sizing: border-box;\n`;\n\nconst OverlayWrapper = styled.div`\n  position: fixed;\n  z-index: ${(p) => p.theme.zIndexes.dropdownZIndex};\n  width: max-content;\n  box-sizing: border-box;\n  max-height: 80vh;\n  transition: top 0.2s ease, opacity 0.2s ease;\n`;\n"],"names":["defaultEvents","useClickAway","ref","onClickAway","events","savedCallback","useRef","useEffect","handler","event","el","_i","events_1","eventName","on","events_2","off","useClickAway$1","useEffectOnce","effect","useEffectOnce$1","useUnmount","fn","fnRef","useUnmount$1","useRafState","initialState","frame","_a","useState","state","setState","setRafState","useCallback","value","useRafState$1","useMouseWheel","mouseWheelScrolled","setMouseWheelScrolled","updateScroll","e","useScroll","useScroll$1","useWindowScroll","isBrowser","pageXOffset","pageYOffset","useWindowScroll$1","useDropdownPosition","overlayHeight","overlayWidth","offsetHeight","persistDown","position","fitToTrigger","top","setTop","left","setLeft","width","setWidth","height","setHeight","isTop","setISTop","updateRect","data","targetHeight","triggerHeight","optionWidth","diff","window","innerHeight","bottom","shouldPositionRight","innerWidth","shouldTop","setToBottomValue","setToTopValue","onHoverUpdateRect","target","current","getBoundingClientRect","updateFuncRef","useCurrent","Math","max","isChildrenElement","children","Array","isArray","isValidElement","BaseDropdown","props","overlayContainerStyle","visible","onVisibleChange","disableAnimation","disableAutoDismiss","dropdownPortalID","scrollRef","isHover","overlayRef","onVisibleCallbackRef","_visible","setVisible","curVisible","initd","mouseWheel","x","y","_scrollRef","containerX","containerY","_overlayContainerStyle","useMemo","opacity","pointerEvents","transitionTopOffset","_top","undefined","_onMouseEnter","triggerType","isSingleElement","jsxs","Fragment","element","jsx","Wrapper","Portal","parentNodeID","OverlayWrapper","styled","div"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6]}