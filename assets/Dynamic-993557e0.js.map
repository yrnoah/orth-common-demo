{"version":3,"file":"Dynamic-993557e0.js","sources":["../../../paas-library/src/DynamicMenu/contexts.ts","../../../paas-library/src/DynamicMenu/Dynamic.styles.ts","../../../paas-library/src/DynamicMenu/Dynamic.tsx"],"sourcesContent":["import { SpringRef } from \"@react-spring/web\";\nimport { createContext, useContext } from \"react\";\nimport {\n  IDymenuThemeContext,\n  IDynamicActorController,\n  IDynamicMenuControllerContext,\n} from \"./common\";\n\nexport const DynamicMenuContext = createContext<IDynamicMenuControllerContext>(\n  {}\n);\nexport const DynamicMenuContextProvider = DynamicMenuContext.Provider;\nexport function useDymenuController() {\n  return useContext(DynamicMenuContext);\n}\n\nexport const DymenuThemeContext = createContext<IDymenuThemeContext>({\n  currentTheme: \"plus\",\n});\nexport const DymenuThemeContextProvider = DymenuThemeContext.Provider;\nexport function useDymenuTheme() {\n  return useContext(DymenuThemeContext);\n}\n\nexport const ImperativeActorContext = createContext<IDynamicActorController>(\n  {}\n);\nexport const ImperativeActorContextProvider = ImperativeActorContext.Provider;\n\nexport const SpringActorContext = createContext<{ controller?: SpringRef }>({});\nexport const useSpringActor = () => useContext(SpringActorContext);\nexport const SpringActorContextProvider = SpringActorContext.Provider;\n","import { animated } from \"@react-spring/web\";\nimport styled from \"styled-components\";\nimport { colors } from \"../styles/colors\";\nimport { shadows } from \"../styles/shadows\";\n\nexport const DynamicMenuWrapper = styled(animated.div)`\n  ${(p) => p.theme.flexCSS.row}\n  ${(p) => p.theme.flexCSS.center}\n  gap: 4px;\n  position: absolute;\n  top: 0;\n  left: 0;\n  border-radius: 8px;\n  width: fit-content;\n  height: fit-content;\n  user-select: none;\n  z-index: ${(p) => p.theme.zIndexes.dymenu_base};\n`;\n\nexport const theme = {\n  plus: {\n    color: colors.plus_woodwhite,\n    backgroundColor: colors.plus_carbon97,\n    boxShadow: shadows.floatingDark,\n  },\n  minus: {\n    color: colors.plus_ash,\n    backgroundColor: colors.plus_warmwhite,\n    boxShadow: shadows.floatingLight,\n  },\n  none: {},\n};\n","import { useSpringValue } from \"@react-spring/web\";\nimport { useMemo } from \"react\";\nimport * as S from \"./Dynamic.styles\";\nimport {\n  DEFAULT_SIZE,\n  IDynamicMenuControllerContext,\n  configEaseOutStandard,\n  configLinearFast,\n  getAnchorOffset,\n} from \"./common\";\nimport {\n  DymenuThemeContextProvider,\n  DynamicMenuContextProvider as Provider,\n} from \"./contexts\";\nimport type { IDynamicMenuOptions, ITransform } from \"./types\";\n\nconst defaultConfig = {\n  config: configEaseOutStandard,\n} as const;\n\n/**\n * Renders a dynamic menu component with the specified children and initial state.\n *\n * @property {ReactNode} children - The child elements to render within the menu.\n * @property {Object} init - The initial state for the menu.\n * @property {number} [init.x=0] - The initial x position of the menu.\n * @property {number} [init.y=0] - The initial y position of the menu.\n * @property {number} [init.width=DEFAULT_SIZE] - The initial width of the menu.\n * @property {number} [init.height=DEFAULT_SIZE] - The initial height of the menu.\n * @property {string} [theme=\"plus\"] - The theme to use for the menu.\n * @return {JSX.Element} The rendered dynamic menu component.\n */\nexport function DynamicMenu({\n  children,\n  init = {},\n  anchor = \"top-left\",\n  theme = \"plus\",\n  style,\n  ...props\n}: IDynamicMenuOptions) {\n  const initialOffset = useMemo(\n    () =>\n      getAnchorOffset(\n        init.width ?? DEFAULT_SIZE,\n        init.height ?? DEFAULT_SIZE,\n        anchor\n      ),\n    [anchor, init]\n  );\n\n  // the position and size with offset applied\n  const initialPosition = useMemo(\n    () => getInitialPosition(initialOffset)(init),\n    [init, initialOffset]\n  );\n\n  const x = useSpringValue(initialPosition.x, defaultConfig);\n  const y = useSpringValue(initialPosition.y, defaultConfig);\n  const width = useSpringValue(initialPosition.width, defaultConfig);\n  const height = useSpringValue(initialPosition.height, defaultConfig);\n  const opacity = useSpringValue(initialPosition.opacity, {\n    config: configLinearFast,\n  });\n  const currentTransform = () => ({\n    x: x.get(),\n    y: y.get(),\n    width: width.get(),\n    height: height.get(),\n    opacity: opacity.get(),\n  });\n  const contextValue: IDynamicMenuControllerContext = {\n    menuX: x,\n    menuY: y,\n    menuWidth: width,\n    menuHeight: height,\n    menuOpacity: opacity,\n    startSizeTo: async (next, delay) => {\n      const pos = currentTransform();\n      const currentOffset = getAnchorOffset(pos.width, pos.height, anchor);\n      const nextOffset = getAnchorOffset(\n        next.width ?? pos.width,\n        next.height ?? pos.height,\n        anchor\n      );\n      const transform = getTransform(currentOffset, nextOffset)(next, pos);\n      const config = { defaultConfig, ...next.config, delay };\n      await Promise.all([\n        height.start(transform.height, config),\n        y.start(transform.y, config),\n      ]);\n      return Promise.all([\n        width.start(transform.width, next.config),\n        x.start(transform.x, next.config),\n      ]);\n    },\n    returnToInitialStyle: async () => {\n      await Promise.all([\n        height.start(initialPosition.height ?? DEFAULT_SIZE),\n        y.start(initialPosition.y),\n      ]);\n      return await Promise.all([\n        width.start(initialPosition.width ?? DEFAULT_SIZE),\n        x.start(initialPosition.x),\n      ]);\n    },\n    scaleSizeTo: async (next) => {\n      const config = { ...defaultConfig, ...next.config };\n      const pos = currentTransform();\n      const currentOffset = getAnchorOffset(pos.width, pos.height, anchor);\n      const nextOffset = getAnchorOffset(\n        next.width ?? pos.width,\n        next.height ?? pos.height,\n        anchor\n      );\n      const transform = getTransform(currentOffset, nextOffset)(next, pos);\n      const res = await Promise.allSettled([\n        width.start(transform.width, config),\n        height.start(transform.height, config),\n        x.start(transform.x, config),\n        y.start(transform.y, config),\n      ]);\n      return res;\n    },\n    scaleToInitialSize: () => {\n      return Promise.allSettled([\n        width.start(initialPosition.width),\n        height.start(initialPosition.height),\n        x.start(initialPosition.x),\n        y.start(initialPosition.y),\n      ]);\n    },\n    setSizeTo: ({ x: tx, y: ty, width: w, height: h }) => {\n      const offset = getAnchorOffset(\n        w ?? width.get(),\n        h ?? height.get(),\n        anchor\n      );\n      w !== undefined && width.set(w);\n      h !== undefined && height.set(h);\n      tx !== undefined && x.set(tx - offset.x);\n      ty !== undefined && y.set(ty - offset.y);\n    },\n  };\n\n  return (\n    <DymenuThemeContextProvider value={{ currentTheme: theme }}>\n      <Provider value={contextValue}>\n        <S.DynamicMenuWrapper\n          {...props}\n          style={{ x, y, width, height, opacity, ...S.theme[theme], ...style }}\n        >\n          {children}\n        </S.DynamicMenuWrapper>\n      </Provider>\n    </DymenuThemeContextProvider>\n  );\n}\n\nconst getInitialPosition =\n  (offset: { x: number; y: number }) => (pos: ITransform) => ({\n    x: (pos.x ?? 0) - offset.x,\n    y: (pos.y ?? 0) - offset.y,\n    width: pos.width ?? DEFAULT_SIZE,\n    height: pos.height ?? DEFAULT_SIZE,\n    opacity: pos.opacity ?? 1,\n  });\n\ninterface Transform {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n}\nconst getTransform =\n  (\n    currentOffset: { x: number; y: number },\n    nextOffset: { x: number; y: number }\n  ) =>\n  (next: ITransform, pos: Transform) => {\n    const origin = { x: pos.x + currentOffset.x, y: pos.y + currentOffset.y };\n    const transformHorizontal = next.width\n      ? {\n          x: (next.x ?? origin.x) - nextOffset.x,\n          width: next.width ?? pos.width,\n        }\n      : { x: pos.x, width: pos.width };\n    const transformVertical = next.height\n      ? {\n          y: (next.y ?? origin.y) - nextOffset.y,\n          height: next.height ?? pos.height,\n        }\n      : { y: pos.y, height: pos.height };\n    return {\n      ...transformHorizontal,\n      ...transformVertical,\n    };\n  };\n"],"names":["DynamicMenuContext","createContext","DynamicMenuContextProvider","Provider","useDymenuController","useContext","DymenuThemeContext","currentTheme","DymenuThemeContextProvider","useDymenuTheme","ImperativeActorContext","SpringActorContext","SpringActorContextProvider","DynamicMenuWrapper","styled","animated","div","p","theme","flexCSS","row","center","zIndexes","dymenu_base","plus","color","colors","plus_woodwhite","backgroundColor","plus_carbon97","boxShadow","shadows","floatingDark","minus","plus_ash","plus_warmwhite","floatingLight","none","defaultConfig","configEaseOutStandard","DynamicMenu","children","anchor","style","initialOffset","useMemo","getAnchorOffset","init","DEFAULT_SIZE","initialPosition","getInitialPosition","x","useSpringValue","y","width","height","opacity","configLinearFast","currentTransform","contextValue","pos","currentOffset","nextOffset","next","transform","getTransform","config","delay","res","tx","ty","w","h","offset","jsx","origin","transformHorizontal","transformVertical"],"mappings":"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"}