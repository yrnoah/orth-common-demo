{"version":3,"file":"IconButton.stories-74b33df9.js","sources":["../../../paas-library/src/IconButtons/IconButton.tsx"],"sourcesContent":["import styled, { css } from \"styled-components\";\n\nexport interface IconButtonProps {\n  children: React.ReactNode;\n  active?: boolean;\n  /**\n   * @default #000\n   * @description default color\n   */\n  defaultColor?: string;\n  /**\n   * @default #000\n   * @description color when hovered\n   */\n  hoverColor?: string;\n  /**\n   * @default #000\n   * @description color when active\n   */\n  activeColor?: string;\n  /**\n   * @default defaultColor\n   * @description color when disabled\n   */\n  disabledColor?: string;\n  /**\n   * @default transparent\n   * @description default background color\n   */\n  defaultBGColor?: string;\n  /**\n   * @default baseColor.Blue1 #DCEBF3\n   * @description background color when hovered\n   */\n  hoverBGColor?: string;\n  /**\n   * @default brandColor.Primary7 #457D96\n   * @description background color when active\n   */\n  activeBGColor?: string;\n  /**\n   * @default defaultBGColor\n   * @description background color when disabled\n   */\n  disabledBGColor?: string;\n  /**\n   * @default defaultBGColor\n   * @description default border color\n   */\n  defaultBorderColor?: string;\n  /**\n   * @default hoverBGColor baseColor.Blue1 #DCEBF3\n   * @description background color when hovered\n   */\n  hoverBorderColor?: string;\n  /**\n   * @default activeBGColor brandColor.Primary7 #457D96\n   * @description background color when active\n   */\n  activeBorderColor?: string;\n  /**\n   * @default defaultBGColor\n   * @description background color when disabled\n   */\n  disabledBorderColor?: string;\n}\n\n/**\n * @example\n * import styled from \"styled-components\";\n * import { DmIcon12Down } from \"@orthogonalgroup/ui/src/icons\";\n * import IconButton from \"@orthogonalgroup/ui/src/IconButtons\";\n *\n * const Arrow = styled(DmIcon12Down)`\n * transition: all 0.2s;\n *\n * ${IconButton}:hover:not(:disabled) & {\n *   transform: rotate(180deg);\n * }\n * `;\n *\n * <IconButton>\n *   <Arrow fill=\"currentColor\" width={20} height={20} />\n * </IconButton>\n *\n **/\nconst IconButton = styled.button<IconButtonProps>`\n  border: none;\n  outline: none;\n  box-sizing: border-box;\n  ${(p) => p.theme.flexCSS.row}\n  ${(p) => p.theme.flexCSS.center}\n  border-radius: 4px;\n  border-width: 1px;\n  border-style: solid;\n  padding: 3.6px;\n  cursor: ${(p) => (p.disabled ? \"not-allowed\" : \"pointer\")};\n\n  ${({ theme: { colors }, active, disabled, ...restColors }) => {\n    // normal styles\n    let color = restColors.defaultColor || \"#000\";\n    let _hoverColor = restColors.hoverColor || \"#000\";\n    let backgroundColor = restColors.defaultBGColor || \"transparent\";\n    let borderColor = restColors.defaultBorderColor || backgroundColor;\n    let hoverBackgroundColor =\n      restColors.hoverBGColor || colors.baseColor.Blue1;\n    // active styles\n    if (active && !disabled) {\n      color = restColors.activeColor || color;\n      _hoverColor = restColors.activeColor || _hoverColor;\n      backgroundColor = restColors.activeBGColor || colors.brandColor.Primary7;\n      borderColor = restColors.activeBorderColor || backgroundColor;\n      hoverBackgroundColor =\n        restColors.activeBGColor || colors.brandColor.Primary7;\n    }\n    // disable styles\n    if (disabled) {\n      color = restColors.disabledColor || color;\n      borderColor = restColors.disabledBorderColor || backgroundColor;\n      backgroundColor = restColors.disabledBGColor || backgroundColor;\n    }\n    return css`\n      color: ${color};\n      border-color: ${borderColor};\n      background-color: ${backgroundColor};\n      transition: all 0.2s;\n\n      &:hover:not(:disabled) {\n        color: ${_hoverColor};\n        border-color: ${restColors.hoverBorderColor || hoverBackgroundColor};\n        background-color: ${hoverBackgroundColor};\n      }\n    `;\n  }}\n`;\nexport default IconButton;\n"],"names":["IconButton","styled","p","colors","active","disabled","restColors","color","_hoverColor","backgroundColor","borderColor","hoverBackgroundColor","css","IconButton$2"],"mappings":"uYAsFA,MAAAA,EAAAC,EAAA;AAAA;AAAA;AAAA;AAAA,IAA0BC,GAAAA,EAAA,MAAA,QAAA;AAAA,IAICA,GAAAA,EAAA,MAAA,QAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YACAA,GAAAA,EAAA,SAAA,cAAA;AAAA;AAAA,IAKsB,CAAA,CAAA,MAAA,CAAA,OAAAC,CAAA,EAAA,OAAAC,EAAA,SAAAC,EAAA,GAAAC,KAAA,CAI7C,IAAAC,EAAAD,EAAA,cAAA,OACAE,EAAAF,EAAA,YAAA,OACAG,EAAAH,EAAA,gBAAA,cACAI,EAAAJ,EAAA,oBAAAG,EACAE,EAAAL,EAAA,cAAAH,EAAA,UAAA,MAGA,OAAAC,GAAA,CAAAC,IACEE,EAAAD,EAAA,aAAAC,EACAC,EAAAF,EAAA,aAAAE,EACAC,EAAAH,EAAA,eAAAH,EAAA,WAAA,SACAO,EAAAJ,EAAA,mBAAAG,EACAE,EAAAL,EAAA,eAAAH,EAAA,WAAA,UAIFE,IACEE,EAAAD,EAAA,eAAAC,EACAG,EAAAJ,EAAA,qBAAAG,EACAA,EAAAH,EAAA,iBAAAG,GAEFG;AAAAA,eAAOL;AAAA,sBACIG;AAAA,0BACOD;AAAA;AAAA;AAAA;AAAA,iBACID;AAAA,wBAITF,EAAA,kBAAAK;AAAA,4BACsCA;AAAA;AAAA,KAIrD;AAAA,EAEFE,EAAAb;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}