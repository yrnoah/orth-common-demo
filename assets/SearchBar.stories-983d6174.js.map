{"version":3,"file":"SearchBar.stories-983d6174.js","sources":["../../../paas-library/src/utils/keyCode.ts","../../../paas-library/src/Input/SearchBar/SearchBar.tsx"],"sourcesContent":["export const isKeyEnter = (e: React.KeyboardEvent) =>\n  e?.keyCode === 13 || e?.key === \"Enter\";\nexport const isKeyLowercaseE = (e: React.KeyboardEvent) =>\n  e?.keyCode === 69 || e?.key === \"e\";\nexport const isKeyMinus = (e: React.KeyboardEvent) =>\n  e?.keyCode === 189 || e?.key === \"-\";\nexport const isKeyDot = (e: React.KeyboardEvent) =>\n  e?.keyCode === 190 || e?.key === \".\";\n","import React, {\n  useCallback,\n  useMemo,\n  useState,\n  forwardRef,\n  memo,\n  useRef,\n  useDeferredValue,\n} from \"react\";\nimport { useUpdateEffect } from \"react-use\";\nimport styled, { css } from \"styled-components\";\nimport IconButton from \"../../IconButtons\";\nimport { isKeyEnter } from \"../../utils/keyCode\";\nimport { DmIcon20Search, IconClose } from \"../../icons\";\n\ninterface SearchInputProps extends React.InputHTMLAttributes<HTMLInputElement> {\n  /**\n   * search layout style\n   */\n  style?: React.CSSProperties;\n  /**\n   * search input style\n   */\n  inputStyle?: React.CSSProperties;\n  /**\n   * @link https://react.dev/reference/react/useDeferredValue\n   * @description auto triggered by react useDeferredValue\n   */\n  onSearch?: (v: string) => void;\n  searchIconStyle?: React.CSSProperties;\n  clearIconStyle?: React.CSSProperties;\n}\n\nconst SearchInput = forwardRef<HTMLInputElement, SearchInputProps>(\n  (\n    {\n      style,\n      inputStyle,\n      disabled,\n      onChange,\n      onFocus,\n      onBlur,\n      onKeyUp,\n      onSearch,\n      onClick,\n      onMouseOver,\n      onMouseLeave,\n      searchIconStyle,\n      clearIconStyle,\n      ...rest\n    },\n    ref\n  ) => {\n    const inputRef = useRef<HTMLInputElement>();\n    const onRefCallback = useCallback(\n      (el: HTMLInputElement) => {\n        if (inputRef && el) inputRef.current = el;\n        if (ref && el) {\n          if (typeof ref === \"function\") {\n            ref(el);\n            return;\n          }\n          ref.current = el;\n        }\n      },\n      [inputRef, ref]\n    );\n    const [_input, setInput] = useState<string>(() => {\n      if (typeof rest.value === \"string\") return rest.value;\n      return `${rest.defaultValue || \"\"}`;\n    });\n    const deferredValue = useDeferredValue(_input);\n    const [_focused, setFocus] = useState<boolean>(false);\n    const [_hover, setHover] = useState<boolean>(false);\n\n    const _showClear = useMemo(() => {\n      if (!_input) return false;\n      if (disabled || rest.readOnly) return false;\n      if (_focused || _hover) return true;\n      return false;\n    }, [_focused, _input, _hover, disabled, rest.readOnly]);\n\n    const onClickSearch = useCallback(() => {\n      if (disabled) return;\n      if (onSearch) onSearch(_input);\n    }, [_input, disabled, onSearch]);\n    useUpdateEffect(() => {\n      onClickSearch();\n    }, [deferredValue]);\n\n    const _onChange = useCallback(\n      (event: React.ChangeEvent<HTMLInputElement>) => {\n        if (!event) return;\n        if (onChange) onChange(event);\n        const value = event.target.value || \"\";\n        setInput(value);\n      },\n      [onChange]\n    );\n\n    const onClear = useCallback(() => {\n      if (disabled) return;\n      const el = inputRef.current;\n      const event = new Event(\"onChange\", {\n        bubbles: true,\n      });\n      if (el) {\n        el.value = \"\";\n        el.dispatchEvent(event);\n      }\n      if (event.target)\n        _onChange(event as unknown as React.ChangeEvent<HTMLInputElement>);\n      setInput(\"\");\n    }, [_onChange, inputRef, disabled]);\n\n    const _onFocus = (event: React.FocusEvent<HTMLInputElement>) => {\n      if (onFocus) onFocus(event);\n      setFocus(true);\n    };\n\n    const _onBlur = (event: React.FocusEvent<HTMLInputElement>) => {\n      if (onBlur) onBlur(event);\n      setFocus(false);\n    };\n\n    const _onKeyUp = (event: React.KeyboardEvent<HTMLInputElement>) => {\n      if (disabled) return;\n      if (onKeyUp) onKeyUp(event);\n      if (isKeyEnter(event) && onSearch) {\n        onSearch(_input);\n      }\n    };\n    const _onMouseOver = (event: React.MouseEvent<HTMLInputElement>) => {\n      setHover(true);\n      onMouseOver && onMouseOver(event);\n    };\n    const _onMouseLeave = (event: React.MouseEvent<HTMLInputElement>) => {\n      setHover(false);\n      onMouseLeave && onMouseLeave(event);\n    };\n    return (\n      <SearchLayout\n        onMouseOver={_onMouseOver}\n        onMouseLeave={_onMouseLeave}\n        style={style}\n        focused={_focused}\n        onClick={onClick}\n      >\n        <Input\n          {...rest}\n          ref={onRefCallback}\n          style={inputStyle}\n          onChange={_onChange}\n          onFocus={_onFocus}\n          onBlur={_onBlur}\n          onKeyUp={_onKeyUp}\n          disabled={disabled}\n        />\n\n        {_showClear && (\n          <SearchActionWrapper style={clearIconStyle}>\n            <IconButton onClick={onClear} disabled={disabled}>\n              <IconSearchClear />\n            </IconButton>\n          </SearchActionWrapper>\n        )}\n        {!_showClear && (\n          <SearchActionWrapper\n            style={{ ...(searchIconStyle || {}), pointerEvents: \"none\" }}\n          >\n            <IconButton>\n              <IconSearch />\n            </IconButton>\n          </SearchActionWrapper>\n        )}\n      </SearchLayout>\n    );\n  }\n);\n\nexport default memo(SearchInput);\n\ninterface SearchLayoutProps {\n  focused?: boolean;\n}\n\n/** @issues outline & border-radius https://github.com/google/model-viewer/issues/662#issuecomment-1451606074 */\nexport const SearchLayout = styled.div<SearchLayoutProps>(\n  ({ focused, theme: { colors } }) => css`\n    display: flex;\n    align-items: center;\n    justify-content: flex-start;\n    padding: 0 4px;\n    height: 32px;\n    border-radius: 16px;\n    border: 1px solid ${focused ? colors.Clausblue_300 : colors.noColor.Grey2};\n    box-shadow: 0 0 0 5px ${focused ? colors.Clausblue_100 : \"transparent\"};\n    background-color: ${colors.neutral};\n    transition: all 0.2s ease;\n    box-sizing: border-box;\n\n    &:hover {\n      border: 1px solid ${colors.Clausblue_300};\n    }\n  `\n);\n\nexport const Input = styled.input`\n  ${(p) => p.theme.fonts[\"Body-Medium/Regular\"]};\n  line-height: 1;\n  width: 100%;\n  margin-left: 8px;\n  border: none;\n  color: #000;\n  caret-color: ${(p) => p.theme.colors.Clausblue_400};\n  background-color: transparent;\n\n  &:focus,\n  &:active {\n    outline: none;\n  }\n\n  &::placeholder {\n    color: rgba(0, 0, 0, 0.3);\n  }\n\n  &:disabled {\n    cursor: not-allowed;\n  }\n`;\n\nexport const SearchActionWrapper = styled.div`\n  width: 32px;\n  height: 100%;\n  flex: none;\n  ${(p) => p.theme.flexCSS.row}\n  ${(p) => p.theme.flexCSS.center}\n\n  ${IconButton} {\n    width: 24px;\n    height: 24px;\n    border-radius: 50%;\n  }\n`;\n\nexport const IconSearch = styled(DmIcon20Search)`\n  width: 20px;\n  height: 20px;\n  color: ${(p) => p.theme.colors.Neutral_500};\n`;\n\nexport const IconSearchClear = styled(IconClose)`\n  width: 10px;\n  height: 10px;\n  color: ${(p) => p.theme.colors.Neutral_500};\n`;\n"],"names":["isKeyEnter","e","keyCode","key","SearchInput","forwardRef","style","inputStyle","disabled","onChange","onFocus","onBlur","onKeyUp","onSearch","onClick","onMouseOver","onMouseLeave","searchIconStyle","clearIconStyle","ref","inputRef","useRef","onRefCallback","useCallback","el","_input","setInput","useState","rest","deferredValue","useDeferredValue","_focused","setFocus","_hover","setHover","_showClear","useMemo","onClickSearch","useUpdateEffect","_onChange","event","value","onClear","_onFocus","_onBlur","_onKeyUp","_onMouseOver","_onMouseLeave","jsxs","SearchLayout","jsx","Input","SearchActionWrapper","IconButton","IconSearchClear","IconSearch","SearchBar","memo","styled","focused","colors","css","Grey2","neutral","Clausblue_300","input","p","div","row","center","DmIcon20Search","IconClose"],"mappings":"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"}