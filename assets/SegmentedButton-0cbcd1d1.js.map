{"version":3,"file":"SegmentedButton-0cbcd1d1.js","sources":["../../../paas-library/src/Buttons/SegmentedButton/SegmentedButton.tsx"],"sourcesContent":["import styled, { css } from \"styled-components\";\n\nexport interface SegmentedButtonProps {\n  /**\n   * @default false\n   * @description\n   * when true: width=fit-content | min-width=unset\n   * when false width=auto | min-width=64\n   */\n  $instance?: boolean;\n  /**\n   * @default medium\n   * @description\n   * small: min-height=28, horizontal-padding=6 |\n   * medium: min-height=32, horizontal-padding=12 |\n   * large: min-height=48, horizontal-padding=16\n   */\n  $size?: \"small\" | \"medium\" | \"large\";\n  /** @default false */\n  $active?: boolean;\n  children?: React.ReactNode;\n}\n\n/** @design https://www.figma.com/design/JGFHYME2p7RpeMYcoMqooS/ODE-Library-1.0?node-id=6156-5433&t=FAzx6jwix7ISvVDA-4 */\nexport const SegmentedButton = styled.button.attrs({\n  type: \"button\",\n})<SegmentedButtonProps>`\n  ${(p) => p.theme.flex.row}\n  ${(p) => p.theme.flex.center}\n  flex: none;\n  outline: none;\n  border: none;\n  user-select: none;\n  width: ${(p) => (p.$instance ? \"fit-content\" : \"auto\")};\n  min-width: ${(p) => getMinWidth(p.$size, p.$instance)}px;\n  min-height: ${(p) => getHeight(p.$size)}px;\n  padding: ${(p) => getPadding(p.$size)};\n  ${({ $size, theme }) => {\n    const font =\n      $size === \"small\"\n        ? theme.fonts[\"Caption-Large/Bold\"]\n        : theme.fonts[\"Body-Medium/Bold\"];\n    return font;\n  }}\n  ${({ $size, theme }) => {\n    if ($size === \"large\") {\n      return css`\n        border-radius: ${theme.radius.xs}px;\n      `;\n    }\n    return css`\n      border-radius: ${theme.radius.xxxxs}px;\n    `;\n  }}\n\n  background-color: transparent;\n  color: ${(p) => p.theme.colors.noColor.Grey9};\n  transition: color 0.2s ease, background-color 0.2s ease, box-shadow 0.2s ease;\n\n  &:hover {\n    background-color: ${(p) => p.theme.colors.themeColor.Air4};\n    color: ${(p) => p.theme.colors.textInput.default};\n  }\n\n  ${({ $active, theme, disabled }) => {\n    if (!disabled && $active) {\n      return css`\n        background-color: #fff;\n        color: ${theme.colors.textInput.default};\n        box-shadow: ${theme.colors.softShadow};\n\n        &:hover {\n          background-color: #fff;\n          color: ${theme.colors.textInput.default};\n          box-shadow: ${theme.colors.softShadow};\n        }\n      `;\n    }\n    return css``;\n  }}\n\n  &:disabled {\n    background-color: ${(p) => p.theme.colors.button.disabled};\n    color: ${(p) => p.theme.colors.buttonInput.disabled};\n    cursor: not-allowed;\n\n    &:hover {\n      background-color: ${(p) => p.theme.colors.button.disabled};\n      color: ${(p) => p.theme.colors.buttonInput.disabled};\n    }\n  }\n`;\n\nfunction getHeight(size: SegmentedButtonProps[\"$size\"] = \"medium\") {\n  switch (size) {\n    default:\n      return 32;\n    case \"small\":\n      return 28;\n    case \"medium\":\n      return 32;\n    case \"large\":\n      return 48;\n  }\n}\nfunction getMinWidth(\n  size: SegmentedButtonProps[\"$size\"] = \"medium\",\n  instance = false\n) {\n  switch (size) {\n    default:\n      return instance ? 40 : 64;\n    case \"small\":\n      return instance ? 28 : 52;\n    case \"medium\":\n      return instance ? 40 : 64;\n    case \"large\":\n      return instance ? 48 : 118;\n  }\n}\nfunction getPadding(size: SegmentedButtonProps[\"$size\"] = \"medium\") {\n  switch (size) {\n    default:\n    case \"medium\":\n      return \"6px 12px\";\n    case \"small\":\n      return \"6px\";\n    case \"large\":\n      return \"12px 16px\";\n  }\n}\n"],"names":["SegmentedButton","styled","p","row","center","getMinWidth","getHeight","getPadding","$size","theme","css","Grey9","Air4","default","$active","disabled","softShadow","size","instance"],"mappings":"uEAwBO,MAAAA,EAAAC,EAAA,OAAA,MAAA,CAA4C,KAAA,QAEnD,CAAA;AAAA,IAACC,GAAAA,EAAA,MAAA,KAAA;AAAA,IACuBC,GAAAA,EAAAA,MAAAA,KAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,WACAC,GAAAA,EAAAA,UAAAA,cAAAA;AAAAA,eAKyBF,GAAAG,EAAAH,EAAA,MAAAA,EAAA,SAAA;AAAA,gBACKA,GAAAI,EAAAJ,EAAA,KAAA;AAAA,aACdA,GAAAK,EAAAL,EAAA,KAAA;AAAA,IACF,CAAA,CACjC,MAAAM,EAAEA,MAAAA,CAAa,IAChBA,IAAA,QAAAC,EAAA,MAAA,oBAAA,EAAAA,EAAA,MAAA,kBAAA;AAAA,IAKF,CAAA,CACG,MAAAD,EAAEA,MAAAA,CAAa,IAChBA,IAAA,QACEE;AAAAA,yBAAOA,EAAAA,OAAAA;AAAAA,QAITA;AAAAA,uBAAOA,EAAAA,OAAAA;AAAAA;AAAAA;AAAAA;AAAAA,WAGTR,GAAAA,EAAA,MAAA,OAAA,QAAA;AAAA;AAAA;AAAA;AAAA,wBAGuCS,GAAAA,EAAAA,MAAAA,OAAAA,WAAAA;AAAAA,aAIgBC,GAAAA,EAAAA,MAAAA,OAAAA,UAAAA;AAAAA;AAAAA;AAAAA,IACZC,CAAAA,CAGxC,QAAAC,EAAEA,MAAAA,EAASL,SAAAA,CAAgB,IAC5B,CAAAM,GAAAD,EACEJ;AAAAA;AAAAA,iBAAOA,EAAAA,OAAAA,UAAAA;AAAAA,sBAE2BG,EAAAA,OAAAA;AAAAA;AAAAA;AAAAA;AAAAA,mBACLG,EAAAA,OAAAA,UAAAA;AAAAA,wBAIOH,EAAAA,OAAAA;AAAAA;AAAAA,QAKtCH;AAAAA;AAAAA;AAAAA,wBACFR,GAAAA,EAAA,MAAA,OAAA,OAAA;AAAA,aAGmDa,GAAAA,EAAAA,MAAAA,OAAAA,YAAAA;AAAAA;AAAAA;AAAAA;AAAAA,0BACNA,GAAAA,EAAAA,MAAAA,OAAAA,OAAAA;AAAAA,eAIQA,GAAAA,EAAAA,MAAAA,OAAAA,YAAAA;AAAAA;AAAAA;AAAAA,EAMvD,SAAAT,EAAAW,EAAA,SAAA,CACE,OAAAA,EAAA,CAAY,QAER,MAAA,IAAO,IAAA,QAEP,MAAA,IAAO,IAAA,SAEP,MAAA,IAAO,IAAA,QAEP,MAAA,GAAO,CAEb,CACA,SAAAZ,EAAAY,EAAA,SAAAC,EAAA,GAAA,CAIE,OAAAD,EAAA,CAAY,QAER,OAAAC,EAAA,GAAA,GAAuB,IAAA,QAEvB,OAAAA,EAAA,GAAA,GAAuB,IAAA,SAEvB,OAAAA,EAAA,GAAA,GAAuB,IAAA,QAEvB,OAAAA,EAAA,GAAA,GAAuB,CAE7B,CACA,SAAAX,EAAAU,EAAA,SAAA,CACE,OAAAA,EAAA,CAAY,QACV,IAAA,SAEE,MAAA,WAAO,IAAA,QAEP,MAAA,MAAO,IAAA,QAEP,MAAA,WAAO,CAEb"}