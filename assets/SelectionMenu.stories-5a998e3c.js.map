{"version":3,"file":"SelectionMenu.stories-5a998e3c.js","sources":["../../../paas-library/src/Dropdown/Selection/SelectMenu.tsx"],"sourcesContent":["import { useCallback, useMemo, useState } from \"react\";\nimport { SelectionTrigger } from \"./Trigger\";\nimport { BaseDropdown } from \"../Dropdown\";\nimport { fixedForwardRef } from \"../../utils/component\";\nimport { type BaseOption, type SelectMenuProps } from \"./types\";\nimport { defaultHeight, defaultWidth, defaultRect, bindRef } from \"./common\";\nimport { Overlay } from \"./Overlay\";\n\n/**\n * @note for generic type usage, if need to use ref, please import fixedForwardRef from utils/components and `const SelectMenu = fixedForwardRef(RawSelectMenu);`\n * @description design https://www.figma.com/design/JGFHYME2p7RpeMYcoMqooS/ODE-Library-1.0?node-id=8806-5741&t=a5kq8b0LVuQVrQrr-4\n */\nexport const SelectMenu = <TOption extends BaseOption>(\n  props: SelectMenuProps<TOption>,\n  ref: React.ForwardedRef<HTMLButtonElement>\n) => {\n  const {\n    defaultOpen,\n    dropdownConfig,\n    onSelect,\n    options,\n    selected,\n    resetText,\n    _ref,\n    ...triggerProps\n  } = props;\n  const [triggerRect, setRect] = useState(defaultRect);\n  const [_open, setOpen] = useState(() => !!defaultOpen);\n  const [_selected, setInnerSelected] = useState<string | null>(() => {\n    if (selected && options) {\n      if (options.find((o) => o.key === selected)) return selected;\n      // option not found;\n    }\n    return null;\n  });\n  const currentSelected = typeof selected === \"string\" ? selected : _selected;\n  const selectedItem = useMemo(() => {\n    if (typeof currentSelected !== \"string\") return null;\n    if (!options) return null;\n    const _item = options.find((o) => o.key === currentSelected);\n    return _item || null;\n  }, [currentSelected, options]);\n  const overlayContainerStyle = useMemo(\n    () => ({\n      ...(dropdownConfig?.overlayContainerStyle || {}),\n      width: triggerRect.width,\n    }),\n    [triggerRect.width, dropdownConfig?.overlayContainerStyle]\n  );\n  const onVisibleChange = useCallback((v: boolean) => setOpen(v), []);\n  const onTriggerClick = useCallback(() => {\n    if (triggerProps.disabled) return;\n    setOpen((pre) => !pre);\n  }, [triggerProps.disabled]);\n  const disabled = !!triggerProps.disabled;\n  const onOptionSelect = useCallback(\n    (item: unknown) => {\n      setOpen(false);\n      if (disabled) return;\n      // reset\n      if (!item) {\n        if (onSelect) onSelect(null);\n        setInnerSelected(null);\n        return;\n      }\n      const _target = item as TOption;\n      // equal to current\n      if (_target.key === currentSelected) return;\n      // select\n      if (onSelect) onSelect(_target);\n      setInnerSelected(_target.key);\n    },\n    [onSelect, disabled, currentSelected]\n  );\n  return (\n    <BaseDropdown\n      disableAnimation\n      {...dropdownConfig}\n      visible={_open}\n      overlayContainerStyle={overlayContainerStyle}\n      onVisibleChange={onVisibleChange}\n      overlay={\n        <Overlay\n          options={options}\n          disabled={disabled}\n          onSelect={onOptionSelect}\n          selected={currentSelected}\n          resetText={resetText}\n          visible={_open}\n        />\n      }\n    >\n      <SelectionTrigger\n        {...triggerProps}\n        $open={_open}\n        onClick={onTriggerClick}\n        $text={\n          selectedItem?.text ??\n          selectedItem?.key ??\n          currentSelected ??\n          selected ??\n          undefined\n        }\n        ref={(element) => {\n          if (!element) return;\n          const rect = element.getBoundingClientRect();\n          const to = {\n            width: rect.width || defaultWidth,\n            height: rect.height || defaultHeight,\n          };\n          if (\n            to.width !== triggerRect.width ||\n            to.height !== triggerRect.height\n          ) {\n            setRect(to);\n          }\n          bindRef(element, _ref);\n          bindRef(element, ref);\n        }}\n      />\n    </BaseDropdown>\n  );\n};\n\nexport const SelectMenuWithRef = fixedForwardRef(SelectMenu);\n"],"names":["SelectMenu","props","ref","defaultOpen","dropdownConfig","onSelect","options","selected","resetText","_ref","triggerProps","triggerRect","setRect","useState","defaultRect","_open","setOpen","_selected","setInnerSelected","o","currentSelected","selectedItem","useMemo","overlayContainerStyle","width","onVisibleChange","useCallback","v","onTriggerClick","disabled","onOptionSelect","item","_target","jsx","BaseDropdown","Overlay","SelectionTrigger","element","rect","to","defaultWidth","defaultHeight","bindRef","SelectMenuWithRef","fixedForwardRef"],"mappings":"0jBAYO,MAAAA,EAAA,CAAAC,EAAAC,IAAA,CAIL,KAAA,CAAM,YAAAC,EACJA,eAAAA,EACAC,SAAAA,EACAC,QAAAA,EACAC,SAAAA,EACAC,UAAAA,EACAC,KAAAA,EACAC,GAAAA,CACGC,EAAAA,EAEL,CAAAC,EAAAC,CAAA,EAAAC,EAAA,SAAAC,CAAA,EACA,CAAAC,EAAAC,CAAA,EAAAH,EAAA,SAAA,IAAA,CAAA,CAAAV,CAAA,EACA,CAAAc,EAAAC,CAAA,EAAAL,EAAA,SAAA,IACEN,GAAAD,GACEA,EAAA,KAAAa,GAAAA,EAAA,MAAAZ,CAAA,EAA6CA,EAG/C,IAAO,EAETa,EAAA,OAAAb,GAAA,SAAAA,EAAAU,EACAI,EAAAC,EAAAA,QAAA,IACE,OAAAF,GAAA,UACA,CAAAd,EAAc,KACdA,EAAA,KAAAa,GAAAA,EAAA,MAAAC,CAAA,GACA,KAAgB,CAAAA,EAAAd,CAAA,CAAA,EAElBiB,EAAAD,EAAAA,QAAA,KAAA,CACS,IAAAlB,GAAA,YAAAA,EAAA,wBAAA,CAAA,EACyC,MAAAO,EAAA,KAC3Ba,GAAAA,CAAAA,EAAAA,MAAAA,GAAAA,YAAAA,EAAAA,qBAAAA,CAAAA,EAIvBC,EAAAC,EAAAA,YAAAC,GAAAX,EAAAW,CAAA,EAAA,CAAA,CAAA,EACAC,EAAAF,EAAAA,YAAA,IAAA,CACEhB,EAAA,UACAM,EAAAA,GAAAA,CAAAA,CAAAA,CAAqB,EAAA,CAAAN,EAAA,QAAA,CAAA,EAEvBmB,EAAA,CAAA,CAAAnB,EAAA,SACAoB,EAAAJ,cAAAK,GAAA,CAGI,GADAf,EAAAA,EAAAA,EACAa,EAAc,OAEd,GAAA,CAAAE,EAAA,CACE1B,GAAcA,EAAAA,IAAAA,EACda,EAAAA,IAAAA,EACA,OAEF,MAAAc,EAAAD,EAEAC,EAAA,MAAAZ,IAEAf,GAAcA,EAAAA,CAAAA,EACda,EAAAA,EAAAA,GAAAA,EAA4B,EAAA,CAAAb,EAAAwB,EAAAT,CAAA,CAAA,EAIhC,OAAAa,EAAA,IAAAC,EAAA,CAAA,iBAAA,GAAA,GAAA9B,EAAA,QAAAW,EAAA,sBAAAQ,EAAA,gBAAAE,EAAA,QAAAQ,EAAA,IAAAE,EAAA,CAAA,QAAA7B,EAAA,SAAAuB,EAAA,SAAAC,EAAA,SAAAV,EAAA,UAAAZ,EAAA,QAAAO,EAAA,EAAA,SAAAkB,EAAAA,IAAAG,EAAA,CAAA,GAAA1B,EAAA,MAAAK,EAAA,QAAAa,EAAA,OAAAP,GAAA,YAAAA,EAAA,QAAAA,GAAA,YAAAA,EAAA,MAAAD,GAAAb,GAAA,OAAA,IAAA8B,GAAA,CA8BQ,GAAA,CAAAA,EAAc,OACd,MAAAC,EAAAD,EAAA,wBACAE,EAAA,CAAW,MAAAD,EAAA,OAAAE,EACYA,OAAAA,EAAAA,QAAAA,CACEC,GAEzBF,EAAA,QAAA5B,EAAA,OAAA4B,EAAA,SAAA5B,EAAA,SAIEC,EAAAA,CAAAA,EAEF8B,EAAAA,EAAAA,CAAAA,EACAA,EAAAA,EAAAA,CAAAA,CAAoB,CAAA,CAAA,CAAA,CAAA,CAK9B,EAEOC,EAAAC,EAAA5C,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;"}