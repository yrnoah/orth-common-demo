import{a as t,j as _,F as Q}from"./jsx-runtime-a888423b.js";import{r as d}from"./index-8db94870.js";import{f as Y}from"./component-afc23ed8.js";import{i as G}from"./keyCode-5935525e.js";import{B as J}from"./Dropdown-82bc9635.js";import{d as U,O as X,a as Z,b as P,c as F}from"./Overlay-d64fba2b.js";import{T as ee,I as te,a as ne}from"./Trigger-e34a072d.js";import{p as D}from"./styled-components.browser.esm-6dd904cc.js";import"./_commonjsHelpers-042e6b4d.js";import"./Portal-847ba74d.js";import"./index-8ce4a492.js";import"./useCurrent-3439251d.js";import"./useMeasure-2fb4c371.js";import"./IconCheckSmall-fd51d182.js";import"./IconArrowSm-99e81fe8.js";import"./emotion-unitless.esm-acc3a66a.js";const p=(l,a)=>{var O,C,k;const{defaultOpen:m,dropdownConfig:s,onSelectChange:h,options:u,selected:g,resetText:E,_ref:H,inputProps:i,disableFilter:$=!1,...o}=l,[y,B]=d.useState(U),[w,c]=d.useState(()=>!!m),[V,x]=d.useState(!1),[q,v]=d.useState(g||null),r=typeof g=="string"?g:q,f=d.useMemo(()=>typeof r!="string"||!u?null:u.find(n=>n.key===r)||null,[r,u]),N=d.useMemo(()=>u?V&&r!=null&&r.length&&!$?u.filter(e=>!!(e.key.match(r)||e.text&&e.text.toLowerCase().match(r.toLowerCase()))):u:[],[u,V,r,$]),z=d.useMemo(()=>({...(s==null?void 0:s.overlayContainerStyle)||{},width:y.width}),[y.width,s==null?void 0:s.overlayContainerStyle]),W=e=>{e||(h==null||h(q,"select"),x(!1)),c(e)},A=d.useCallback(e=>{e.target.tagName!=="INPUT"&&(o.disabled||c(n=>!n))},[o.disabled]),S=!!o.disabled,j=d.useCallback(e=>{if(S)return;if(!e){v(null),c(!1);return}const n=e;n.key!==r&&(v(n.key),c(!1))},[S,r]);let K=(f==null?void 0:f.text)??(f==null?void 0:f.key)??r??g??void 0;return(O=o.style)!=null&&O.position&&((C=o.style)==null||delete C.position),t(J,{disableAnimation:!0,...s,visible:w,overlayContainerStyle:z,onVisibleChange:W,overlay:t(X,{options:N,disabled:S,onSelect:j,selected:r,resetText:E,visible:w}),children:_(re,{$width:(k=o.style)==null?void 0:k.width,children:[t(ie,{...o,$open:w,onClick:A,ref:e=>{if(!e)return;const n=e.getBoundingClientRect(),T={width:n.width||Z,height:n.height||P};(T.width!==y.width||T.height!==y.height)&&B(T),F(e,H),F(e,a)},children:t(ee,{})}),t(te,{...i,disabled:o.disabled||(i==null?void 0:i.disabled),readOnly:o.disabled||(i==null?void 0:i.readOnly),type:"text",value:w?r||"":K||"",placeholder:o.$placeholder,onFocus:e=>{var n;(n=i==null?void 0:i.onFocus)==null||n.call(i,e),x(!0),c(!0)},onChange:e=>{const n=e.target.value||"";h&&h(n||null,"input"),v(n||null)},onKeyDown:e=>{var n;(n=i==null?void 0:i.onKeyDown)==null||n.call(i,e),G(e)&&(e.currentTarget.blur(),c(!1),x(!1))}})]})})},I=Y(p),ie=D(ne)`
  width: 100%;
`,re=D.div`
  position: relative;
  width: 100%;

  ${({$width:l})=>l?{width:l}:void 0}
`;try{p.displayName="SelectFilterInput",p.__docgenInfo={description:"",displayName:"SelectFilterInput",props:{children:{defaultValue:null,description:"@description Slot for custom nodes, usually use $text will be fine.\nString type children with `TextContainer` has conflict with $text, so it's blocked when $text exists;",name:"children",required:!1,type:{name:"ReactNode"}},$size:{defaultValue:{value:'"small"'},description:`@description only effect height currently;
default width 136;
when small height = 24;
when medium height = 32`,name:"$size",required:!1,type:{name:"enum",value:[{value:'"small"'},{value:'"medium"'}]}},_ref:{defaultValue:null,description:`@description if fixedForwardRef & ref not work, try _ref
@todo should fix when react19 release`,name:"_ref",required:!1,type:{name:"ForwardedRef<HTMLButtonElement>"}},$text:{defaultValue:null,description:"@description display text",name:"$text",required:!1,type:{name:"string"}},$placeholder:{defaultValue:null,description:"@description when selected not provided and $placeholder existed, render $placeholder",name:"$placeholder",required:!1,type:{name:"string"}},selected:{defaultValue:null,description:"@description selected item key",name:"selected",required:!1,type:{name:"string"}},options:{defaultValue:{value:"[]"},description:"",name:"options",required:!1,type:{name:"TOption extends { key: string; text?: string }"}},resetText:{defaultValue:null,description:"@description if set, options will insert a rest option with provided text to reset",name:"resetText",required:!1,type:{name:"string"}},defaultOpen:{defaultValue:{value:"false"},description:"",name:"defaultOpen",required:!1,type:{name:"boolean"}},dropdownConfig:{defaultValue:null,description:"@description props of ui/Dropdown/BaseDropdown",name:"dropdownConfig",required:!1,type:{name:'Omit<DropdownProps, "children" | "visible" | "overlay" | "position" | "onVisibleChange" | "fitToTrigger">'}},disableFilter:{defaultValue:null,description:"",name:"disableFilter",required:!1,type:{name:"boolean"}},inputProps:{defaultValue:null,description:"",name:"inputProps",required:!1,type:{name:'Omit<Omit<DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>, "ref"> & { ...; }, "value" | ... 2 more ... | "onChange">'}},onSelectChange:{defaultValue:null,description:"",name:"onSelectChange",required:!1,type:{name:'(item: string | TOption, type: "input" | "select") => void'}}}}}catch{}try{I.displayName="SelectFilterInputWithRef",I.__docgenInfo={description:"",displayName:"SelectFilterInputWithRef",props:{children:{defaultValue:null,description:"@description Slot for custom nodes, usually use $text will be fine.\nString type children with `TextContainer` has conflict with $text, so it's blocked when $text exists;",name:"children",required:!1,type:{name:"ReactNode"}},$size:{defaultValue:{value:'"small"'},description:`@description only effect height currently;
default width 136;
when small height = 24;
when medium height = 32`,name:"$size",required:!1,type:{name:"enum",value:[{value:'"small"'},{value:'"medium"'}]}},_ref:{defaultValue:null,description:`@description if fixedForwardRef & ref not work, try _ref
@todo should fix when react19 release`,name:"_ref",required:!1,type:{name:"ForwardedRef<HTMLButtonElement>"}},$text:{defaultValue:null,description:"@description display text",name:"$text",required:!1,type:{name:"string"}},$placeholder:{defaultValue:null,description:"@description when selected not provided and $placeholder existed, render $placeholder",name:"$placeholder",required:!1,type:{name:"string"}},selected:{defaultValue:null,description:"@description selected item key",name:"selected",required:!1,type:{name:"string"}},options:{defaultValue:{value:"[]"},description:"",name:"options",required:!1,type:{name:"TOption extends { key: string; text?: string }"}},resetText:{defaultValue:null,description:"@description if set, options will insert a rest option with provided text to reset",name:"resetText",required:!1,type:{name:"string"}},defaultOpen:{defaultValue:{value:"false"},description:"",name:"defaultOpen",required:!1,type:{name:"boolean"}},dropdownConfig:{defaultValue:null,description:"@description props of ui/Dropdown/BaseDropdown",name:"dropdownConfig",required:!1,type:{name:'Omit<DropdownProps, "children" | "visible" | "overlay" | "position" | "onVisibleChange" | "fitToTrigger">'}},disableFilter:{defaultValue:null,description:"",name:"disableFilter",required:!1,type:{name:"boolean"}},inputProps:{defaultValue:null,description:"",name:"inputProps",required:!1,type:{name:'Omit<Omit<DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>, "ref"> & { ...; }, "value" | ... 2 more ... | "onChange">'}},onSelectChange:{defaultValue:null,description:"",name:"onSelectChange",required:!1,type:{name:'(item: string | BaseOption, type: "input" | "select") => void'}}}}}catch{}const _e={title:"ODE Library/Selection/SelectWithInput",tags:["autodocs"],component:p,argTypes:{children:{table:{disable:!0}},$text:{table:{disable:!0}},$size:{control:"select",options:["small","medium"]}}},le=[{key:"true",text:"about true text"},{key:"false",text:"about false text"},{key:"none",text:"none"}],oe=Array.from({length:200}).map((l,a)=>({key:`option_${a+1}`,text:`option ${a+1}`}));function ae({...l}){const{style:a,...m}=l;return _(Q,{children:[t("a",{target:"blank",href:"https://www.figma.com/design/JGFHYME2p7RpeMYcoMqooS/ODE-Library-1.0?node-id=8806-5741&t=a5kq8b0LVuQVrQrr-4",rel:"noreferrer",children:"design reference"}),t("br",{}),t("br",{}),t("h4",{children:"- trigger with input"}),t("br",{}),t(p,{...m,style:{width:150}}),t("br",{}),t("br",{}),t("h4",{children:"- default open = true"}),t("br",{}),t(p,{...m,defaultOpen:!0,style:a}),t("br",{}),t("br",{}),t("div",{style:{height:"200vh"}}),_("h4",{children:["- trigger with auto position (top or bottom) ",t("br",{}),"- if bottom & options' height is larger than window's height, options will be fix to fit window's bottom"]}),t("br",{}),t(p,{...m,options:oe,style:a,_ref:s=>{console.info("get trigger element from _ref",s)}}),t("br",{}),t("br",{}),t("div",{style:{height:"200vh"}})]})}const b={render:ae,args:{$size:"small",$placeholder:"select value",defaultOpen:!1,disabled:!1,style:{width:"50vw"},dropdownConfig:{triggerType:"click"},options:le,resetText:"-- please choose",onSelectChange:(l,a)=>console.info("onSelect",l,a)}};var M,R,L;b.parameters={...b.parameters,docs:{...(M=b.parameters)==null?void 0:M.docs,source:{originalSource:`{
  render: SelectMenuStory,
  args: {
    $size: "small",
    $placeholder: "select value",
    defaultOpen: false,
    disabled: false,
    style: {
      width: "50vw"
    },
    dropdownConfig: {
      triggerType: "click"
    },
    options,
    resetText: "-- please choose",
    onSelectChange: (item, type) => console.info("onSelect", item, type)
  }
}`,...(L=(R=b.parameters)==null?void 0:R.docs)==null?void 0:L.source}}};const $e=["SelectionWithInput"];export{b as SelectionWithInput,$e as __namedExportsOrder,_e as default};
//# sourceMappingURL=SelectionWithInput.stories-b046431d.js.map
