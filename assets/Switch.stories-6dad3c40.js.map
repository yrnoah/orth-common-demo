{"version":3,"file":"Switch.stories-6dad3c40.js","sources":["../../../paas-library/src/Switch/Switch.tsx"],"sourcesContent":["import { memo, forwardRef, useState, useMemo } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { hexToRgb } from \"../styles/colors\";\n\nexport interface OrthSwitchProps\n  extends Omit<React.ButtonHTMLAttributes<HTMLButtonElement>, \"onChange\"> {\n  /**\n   * @default brandColor.Primary7: \"#457D96\"\n   * @description active color for slider dot\n   */\n  activeColor?: string;\n  /** @default #f0f0f0 */\n  activeBackgroundColor?: string;\n  /**\n   * @default Neutral_300: \"#BFBFBF\"\n   * @description default color for button wrapper\n   */\n  defaultColor?: string;\n  /** @default #f0f0f0 */\n  defaultBackgroundColor?: string;\n  /**\n   * @default rgba(0,0,0,0.1)\n   * @description default color for button border\n   */\n  defaultBorderColor?: string;\n  /** @default theme.colors.Oxfordblue_500 opacity 0.2 */\n  activeBorderColor?: string;\n  /** @default 0 */\n  borderWidth?: number;\n  /**\n   * @default undefined\n   * @description if set, state outside control the switch\n   */\n  checked?: boolean;\n  /** @default false */\n  defaultChecked?: boolean;\n  /** @default false */\n  disabled?: boolean;\n  /** @default 300 @unit million seconds @description transition duration */\n  duration?: number;\n  /** @default linear @description transition timing function */\n  transitionTiming?: React.CSSProperties[\"transitionTimingFunction\"];\n  /** @default 3 @min 3 @unit pixel */\n  padding?: number;\n  /** @default 3 @unit pixel */\n  minPadding?: number;\n  /**\n   * @default 10\n   * @unit pixel\n   * @description dot size\n   */\n  size?: number;\n  /**\n   * @min size + padding * 2 + borderWidth\n   * @description container width, if not set, width = size * 2.6 + padding + border-size\n   */\n  width?: number;\n  onChange?: (\n    checked: boolean,\n    event: React.MouseEvent<HTMLButtonElement>\n  ) => void;\n}\n\nexport interface WrapperProps\n  extends Pick<\n    OrthSwitchProps,\n    | \"activeColor\"\n    | \"activeBackgroundColor\"\n    | \"defaultColor\"\n    | \"defaultBackgroundColor\"\n    | \"disabled\"\n    | \"defaultBorderColor\"\n    | \"activeBorderColor\"\n    | \"duration\"\n    | \"transitionTiming\"\n  > {\n  active: boolean;\n  translateX: number;\n  size: number;\n}\n\n/**\n * @link https://www.figma.com/file/l4NEBUfwUwaVNZZAkcTARj/FrontPanel-(Copy)?type=design&node-id=1904-32855&mode=design&t=kq8wVW73QlMqbP5I-0\n * @link https://www.figma.com/file/l4NEBUfwUwaVNZZAkcTARj/FrontPanel-(Copy)?type=design&node-id=1785-23057&mode=design&t=AR5HnHCGhclCF8U4-0\n */\nexport const Switch = forwardRef<HTMLButtonElement, OrthSwitchProps>(\n  (props, ref) => {\n    const {\n      size = 10,\n      borderWidth = 0,\n      width,\n      defaultChecked = false,\n      checked,\n      disabled = false,\n      onChange,\n      style,\n      padding = 3,\n      minPadding = 3,\n      ...rest\n    } = props;\n    const [_checked, setChecked] = useState(defaultChecked);\n    const active = typeof checked === \"boolean\" ? checked : _checked;\n    const styles = useMemo(() => {\n      const _padding = Math.max(padding, minPadding);\n      const _borderWidth =\n        borderWidth || parseFloat(`${style?.borderWidth}`) || 0;\n      const minWidth = size + _padding * 2 + _borderWidth;\n      const _width = width || getInnerWidth(size) + _padding * 2 + _borderWidth;\n      const borderRadius = _padding + size * 0.5 + _borderWidth;\n      return {\n        ...(style || {}),\n        padding: _padding,\n        borderRadius,\n        width: Math.max(_width, minWidth),\n        borderWidth: Math.max(_borderWidth, 0),\n      } as const;\n    }, [style, padding, minPadding, size, width, borderWidth]);\n    if (size <= 0) return null;\n    const translateX =\n      styles.width - size - styles.borderWidth - styles.padding * 2;\n    return (\n      <Wrapper\n        type=\"button\"\n        {...rest}\n        ref={ref}\n        active={active}\n        size={size}\n        translateX={translateX}\n        disabled={disabled}\n        style={styles}\n        onClick={(event) => {\n          if (disabled) return;\n          const newValue = !active;\n          if (onChange) onChange(newValue, event);\n          setChecked(newValue);\n        }}\n      >\n        <Dot />\n      </Wrapper>\n    );\n  }\n);\n\nexport default memo(Switch);\n\nexport const Dot = styled.div({});\n\n/** @todo naming #f0f0f0 by design */\nexport const Wrapper = styled.button<WrapperProps>`\n  box-sizing: border-box;\n  background-color: ${(p) => p.defaultBackgroundColor || \"#f0f0f0\"};\n  width: max-content;\n  border-style: solid;\n  border-color: ${(p) => p.defaultBorderColor || \"rgba(0, 0, 0, 0.1)\"};\n  cursor: ${(p) => (p.disabled ? \"not-allowed\" : \"pointer\")};\n\n  ${Dot} {\n    width: ${({ size }) => size}px;\n    height: ${({ size }) => size}px;\n    border-radius: ${({ size }) => size * 0.5}px;\n    background-color: ${(p) => p.defaultColor || p.theme.colors.Neutral_300};\n    transform: translateX(0);\n  }\n\n  ${({ duration, transitionTiming }) => css`\n    transition: all ${duration ?? 300}ms ${transitionTiming || \"linear\"};\n    ${Dot} {\n      transition: all ${duration ?? 300}ms ${transitionTiming || \"linear\"};\n    }\n  `}\n\n  ${({\n    active,\n    theme,\n    disabled,\n    translateX,\n    activeBorderColor,\n    activeColor,\n    activeBackgroundColor,\n  }) => {\n    if (active) {\n      if (disabled) {\n        return css`\n          ${Dot} {\n            transform: translateX(${translateX}px);\n          }\n        `;\n      }\n      let fixedColor = activeBorderColor;\n      let dotBGColor = activeColor || theme.colors.brandColor.Primary7;\n      if (!fixedColor) {\n        const c = hexToRgb(theme.colors.Oxfordblue_500);\n        fixedColor = c\n          ? `rgba(${c.r},${c.g},${c.b},0.2)`\n          : theme.colors.Oxfordblue_500;\n      }\n      return css`\n        border-color: ${fixedColor};\n        background-color: ${activeBackgroundColor || \"#f0f0f0\"};\n        ${Dot} {\n          background-color: ${dotBGColor};\n          transform: translateX(${translateX}px);\n        }\n      `;\n    }\n    return undefined;\n  }}\n`;\n\nconst getInnerWidth = (size: number) => size * 2.6;\n"],"names":["Switch","forwardRef","props","ref","size","borderWidth","width","checked","onChange","style","minPadding","rest","_checked","setChecked","useState","defaultChecked","active","styles","useMemo","_padding","padding","_borderWidth","minWidth","_width","getInnerWidth","borderRadius","translateX","jsx","Wrapper","disabled","event","newValue","Dot","memo","styled","button","p","Neutral_300","duration","css","theme","activeBorderColor","activeColor","fixedColor","dotBGColor","c","hexToRgb"],"mappings":"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"}