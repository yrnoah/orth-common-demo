{"version":3,"file":"Table.stories-fd690b47.js","sources":["../../../paas-library/src/DynamicMenu/components/Scrollbar.tsx","../../../paas-library/src/DynamicMenu/components/Table.styles.ts","../../../paas-library/src/DynamicMenu/components/Table.tsx"],"sourcesContent":["import { animated, useSpringValue } from \"@react-spring/web\";\nimport { useRef, useState } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { colors } from \"../../styles/colors\";\nimport { useDymenuTheme } from \"../contexts\";\nimport { ThemeEnumType } from \"../types\";\n\ninterface Props {\n  children: JSX.Element;\n  axis?: \"horizontal\" | \"vertical\";\n  alwaysVisible?: boolean;\n  offset?: number;\n}\nexport function Scrollbar({\n  children,\n  axis = \"vertical\",\n  alwaysVisible,\n  offset = 4,\n}: Props) {\n  const { currentTheme } = useDymenuTheme();\n  const thumbY = useSpringValue<number>(0);\n  const [show, setShow] = useState(alwaysVisible ?? false);\n  const debounceRef = useRef(0);\n  const target = useRef<HTMLDivElement>(null);\n  const [height, setHeight] = useState<number>(0);\n\n  const handleScroll: React.UIEventHandler<HTMLDivElement> = (e) => {\n    if (e.target) {\n      const div = e.target as HTMLElement;\n      const child = div.querySelector(\"div:first-child\");\n      if (!child) return;\n      const rect = child.getBoundingClientRect();\n      const scale = axis === \"horizontal\" ? div.scrollLeft : div.scrollTop;\n      const distance = axis === \"horizontal\" ? rect.width : rect.height;\n      const length =\n        (axis === \"horizontal\" ? div.clientWidth : div.clientHeight) -\n        offset -\n        4;\n      thumbY.start((scale / distance) * length, { immediate: true });\n\n      if (height === 0) {\n        // initialize\n        if (axis === \"vertical\") {\n          setHeight((div.clientHeight / child.clientHeight) * div.clientHeight);\n        } else if (axis === \"horizontal\") {\n          setHeight((div.clientWidth / child.clientWidth) * div.clientWidth);\n        }\n        return;\n      }\n\n      // opacity debounce\n      if (!alwaysVisible) {\n        setShow(true);\n        if (debounceRef.current !== 0) {\n          window.clearTimeout(debounceRef.current);\n        }\n        debounceRef.current = window.setTimeout(() => {\n          setShow(false);\n          debounceRef.current = 0;\n        }, 100);\n      }\n    }\n  };\n  return (\n    <ScrollWrapper ref={target} onScroll={handleScroll}>\n      {children}\n      <ScrollbarWrapper offset={offset} $show={show} $theme={currentTheme}>\n        <Thumb style={{ y: thumbY }} height={height} $theme={currentTheme} />\n      </ScrollbarWrapper>\n    </ScrollWrapper>\n  );\n}\n\nconst ScrollWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  overflow-y: scroll;\n\n  ::-webkit-scrollbar {\n    display: none;\n  }\n`;\n\nconst ScrollbarWrapper = styled.div<{\n  $show: boolean;\n  offset: number;\n  $theme: ThemeEnumType;\n}>`\n  border-radius: 2px;\n  width: 4px;\n  height: calc(100% - ${(p) => p.offset}px - 4px);\n  position: absolute;\n  top: ${(p) => p.offset}px;\n  right: 4px;\n  opacity: ${(p) => (p.$show ? 1 : 0)};\n  transition: opacity 150ms linear;\n  ${(p) => themes[p.$theme]}\n`;\n\nconst Thumb = styled(animated.div)<{ height: number; $theme: ThemeEnumType }>`\n  position: absolute;\n  border-radius: 2px;\n  width: 4px;\n  height: ${(p) => p.height}%;\n  ${(p) => thumbThemes[p.$theme]}\n`;\n\nconst themes = {\n  plus: css`\n    background-color: ${colors.Neutral_400};\n  `,\n  minus: css`\n    background-color: ${colors.Neutral_400};\n  `,\n  none: \"\",\n};\n\nconst thumbThemes = {\n  plus: css`\n    background-color: ${colors.plus_woodwhite};\n  `,\n  minus: css`\n    background-color: ${colors.plus_woodwhite};\n  `,\n  none: \"\",\n};\n","import styled, { css } from \"styled-components\";\nimport { flexCSS } from \"../../styles/commons\";\nimport { typography } from \"../themes\";\nimport { TAlignment, ThemeEnumType } from \"../types\";\n\nexport const TableWrapper = styled.div<{ $theme: ThemeEnumType }>`\n  position: relative;\n  width: 100%;\n  ${flexCSS.column}\n  border-radius: 4px;\n  ${typography.dymenu_MenuBody}\n  ${(p) => tableThemes[p.$theme]}\n`;\n\nconst tableThemes = {\n  plus: css`\n    color: ${({ theme }) => theme.colors.noColor.Grey2};\n    background-color: ${({ theme }) => theme.colors.plus_deeper_85};\n  `,\n  minus: css`\n    color: ${({ theme }) => theme.colors.noColor.Grey2};\n    background-color: ${({ theme }) => theme.colors.plus_deeper_85};\n  `,\n  none: \"\",\n};\n\nexport const row = css<{ gap: number }>`\n  display: flex;\n  padding: 6px 16px;\n  gap: ${(p) => p.gap}px;\n  ${typography.dymenu_MenuBody}\n`;\n\nexport const TitleRowWrapper = styled.div<{ gap: number }>`\n  background-color: black;\n  ${row}\n  color: white;\n  border-radius: 4px 4px 0 0;\n  position: sticky;\n`;\n\ninterface TableRowProps {\n  overflow?: \"visible\" | \"hidden\";\n  gap: number;\n}\nexport const TableRow = styled.div<TableRowProps>`\n  ${row}\n  overflow: ${(p) => (p.overflow ? p.overflow : \"hidden\")};\n`;\n\nexport const Col = styled.div<{ $colPercent: number; align: TAlignment }>`\n  display: flex;\n  ${flexCSS.center}\n  gap: 8px;\n  width: ${(p) => p.$colPercent}%;\n  justify-content: ${(p) => p.align};\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nexport const TableBodyWrapper = styled.div`\n  ${flexCSS.column}\n  height: fit-content;\n`;\n","import {\n  HTMLAttributes,\n  ReactNode,\n  createContext,\n  forwardRef,\n  useContext,\n  useMemo,\n} from \"react\";\nimport { useDymenuTheme } from \"../contexts\";\nimport { TAlignment } from \"../types\";\nimport { Scrollbar } from \"./Scrollbar\";\nimport * as S from \"./Table.styles\";\n\ninterface Props extends HTMLAttributes<HTMLDivElement> {\n  template: number[];\n  alignment: TAlignment | TAlignment[];\n  gap?: number;\n}\n\nconst context = createContext<{\n  distribute: number[];\n  align: TAlignment[];\n  gap: number;\n}>({\n  distribute: [50, 50],\n  align: [\"start\", \"end\"],\n  gap: 8,\n});\n/**\n * Renders a table using the provided props and template.\n *\n * @param {Props} template - The table template to render.\n * @param {Props} alignment - \"center\" ≡ [\"center\", ...]; [\"start\", \"center\"] ≡ [\"start\", \"center\", \"center\", ...].\n * @param {Props} gap - The gap between columns, default 8px.\n * @example <Table template={[1, 2, 1, 1]}>...</Table> creates a table with 4 columns, each takes 20% width while the second takes 40% width\n */\nexport function Table({ template, alignment, gap, ...rest }: Props) {\n  const { currentTheme } = useDymenuTheme();\n  const distribute = useMemo(() => {\n    const total = template.reduce((a, b) => a + b, 0);\n    return template.map((t) => (t * 100) / total);\n  }, [template]);\n  const align = useMemo(() => {\n    if (alignment instanceof Array && alignment.length >= template.length) {\n      return alignment;\n    } else if (alignment instanceof Array) {\n      return alignment.concat(\n        new Array(template.length - alignment.length).fill(\n          alignment[alignment.length - 1]\n        )\n      );\n    } else {\n      return new Array(template.length).fill(alignment);\n    }\n  }, [alignment, template]);\n  return (\n    <context.Provider value={{ distribute, align, gap: gap ?? 8 }}>\n      <S.TableWrapper {...rest} $theme={currentTheme} />\n    </context.Provider>\n  );\n}\n\ninterface RowProps extends HTMLAttributes<HTMLDivElement> {\n  children: ReactNode[];\n  overflow?: \"visible\" | \"hidden\";\n}\nexport function Row({ children, ...rest }: RowProps) {\n  const { distribute, align, gap } = useContext(context);\n  return (\n    <S.TableRow {...rest} gap={gap}>\n      {distribute.map((d, i) => (\n        <S.Col key={i} $colPercent={d} align={align[i]}>\n          {children[i]}\n        </S.Col>\n      ))}\n    </S.TableRow>\n  );\n}\n\nexport function TitleRow({ children, ...rest }: RowProps) {\n  const { distribute, align, gap } = useContext(context);\n  return (\n    <S.TitleRowWrapper {...rest} gap={gap}>\n      {distribute.map((d, i) => (\n        <S.Col key={i} $colPercent={d} align={align[i]}>\n          {children[i]}\n        </S.Col>\n      ))}\n    </S.TitleRowWrapper>\n  );\n}\n\ninterface BodyProps {\n  scrollOffset?: number;\n  children: ReactNode;\n}\nexport const TableBody = forwardRef<HTMLDivElement, BodyProps>(\n  ({ children, scrollOffset }, ref) => {\n    return (\n      <Scrollbar offset={scrollOffset}>\n        <S.TableBodyWrapper ref={ref}>{children}</S.TableBodyWrapper>\n      </Scrollbar>\n    );\n  }\n);\nTableBody.displayName = \"TableBody\";\n"],"names":["Scrollbar","children","alwaysVisible","currentTheme","thumbY","useSpringValue","show","setShow","useState","debounceRef","useRef","target","height","setHeight","handleScroll","e","div","child","rect","scale","axis","distance","length","offset","window","jsxs","ScrollWrapper","styled","ScrollbarWrapper","p","themes","Thumb","animated","css","Neutral_400","thumbThemes","plus_woodwhite","TableWrapper","flexCSS","column","typography","dymenu_MenuBody","tableThemes","$theme","plus","theme","colors","noColor","Grey2","plus_deeper_85","minus","none","row","gap","TitleRowWrapper","TableRow","overflow","Col","center","$colPercent","align","TableBodyWrapper","context","createContext","Table","template","alignment","distribute","useMemo","total","a","b","t","jsx","S.TableWrapper","rest","Row","S.TableRow","i","S.Col","TitleRow","S.TitleRowWrapper","TableBody","forwardRef","ref","scrollOffset","S.TableBodyWrapper"],"mappings":"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"}