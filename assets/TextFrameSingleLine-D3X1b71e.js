import{r as b,j as o,d as g}from"./iframe-D12yBJYT.js";import{E as x}from"./ErrorTip-BJ6zSHkg.js";import{F as h}from"./Label-BQEWlu5n.js";import{t as T}from"./styles-wacdRwg_.js";const w=e=>{const i=b.useRef(null),{ref:s,hasError:f=!0,autoSelect:y=!1,errorMessage:n,label:a="",labelProps:l,errorProps:p,$errorColor:d,...r}=e,c=e.style?.width,m=e.style?.minWidth,u=e.style?.maxWidth;return o.jsxs(o.Fragment,{children:[!!a&&o.jsx(h,{...l,text:a,style:{...S,width:c,minWidth:m,maxWidth:u,...l?.style},$required:r.required}),o.jsx(E,{autoComplete:"new-password",step:r.type==="number"?"any":r.step,...r,style:{...F,...r?.style},$error:!!n,$errorColor:d,onFocus:t=>{e.onFocus&&e.onFocus(t),y&&i.current&&i.current.select()},ref:t=>{if(i.current=t,!!s)if(typeof s=="function"){s(t);return}else s.current=t}}),f&&o.jsx(x,{...p,style:{width:c,minWidth:m,maxWidth:u,...p?.style},message:e.disabled?void 0:n,$errorColor:d})]})},E=g.input`
  height: 44px;
  ${T}
  transition: border-color 0.2s ease, color 0.2s ease;
`,S={display:"block",marginBottom:4},F={marginBottom:4};w.__docgenInfo={description:"@design TextFrame/SingleLine https://www.figma.com/design/JGFHYME2p7RpeMYcoMqooS/ODE-Library-1.0?node-id=7870-18042&t=zbZGBrco5ra09mre-4",methods:[],displayName:"TextFrameSingleLine",props:{errorMessage:{required:!1,tsType:{name:"string"},description:"@description control input error style & display under input element"},hasError:{required:!1,tsType:{name:"boolean"},description:`@default true
@description error tip block default owns 16px height; when set hasError to false, remove error tip block no matter if error message exists.`},autoSelect:{required:!1,tsType:{name:"boolean"},description:`@default false
@description will trigger input.select() when true`},label:{required:!1,tsType:{name:"string"},description:"@description label text"},labelProps:{required:!1,tsType:{name:"ComponentProps",elements:[{name:"literal",value:'"label"'}],raw:'ComponentProps<"label">'},description:"@description override FieldLabel props"},errorProps:{required:!1,tsType:{name:"ComponentProps",elements:[{name:"ErrorTip"}],raw:"ComponentProps<typeof ErrorTip>"},description:"@description override ErrorTip props"},$errorColor:{required:!1,tsType:{name:'ReactCSSProperties["color"]',raw:'React.CSSProperties["color"]'},description:"@default baseColor.Volcano5 `#EE8152`\n@description override error color for border & icon"}},composes:["ComponentProps"]};export{w as T};
