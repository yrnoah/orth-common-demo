{"version":3,"file":"TextFrameSingleLine-d92e5e95.js","sources":["../../../paas-library/src/Textfield/TextFrameSingleLine.tsx"],"sourcesContent":["import { type ComponentPropsWithRef, forwardRef, useRef } from \"react\";\nimport { ErrorTip } from \"./ErrorTip\";\nimport { FieldLabel } from \"./Label\";\nimport styled from \"styled-components\";\nimport {\n  textfieldFrameInputStyle,\n  type TextfieldFrameInputStyleProps,\n} from \"./styles\";\n\ninterface TextFrameSingleLineProps extends ComponentPropsWithRef<\"input\"> {\n  /** @description control input error style & display under input element */\n  errorMessage?: string;\n  /**\n   * @default true\n   * @description error tip block default owns 16px height; when set hasError to false, remove error tip block no matter if error message exists.\n   */\n  hasError?: boolean;\n  /**\n   * @default false\n   * @description will trigger input.select() when true\n   */\n  autoSelect?: boolean;\n  /** @description label text */\n  label?: string;\n  /** @description override FieldLabel props */\n  labelProps?: ComponentPropsWithRef<\"label\">;\n  /** @description override ErrorTip props */\n  errorProps?: ComponentPropsWithRef<typeof ErrorTip>;\n  /**\n   * @default baseColor.Volcano5 `#EE8152`\n   * @description override error color for border & icon\n   */\n  $errorColor?: React.CSSProperties[\"color\"];\n}\n\n/** @design TextFrame/NoLabel https://www.figma.com/design/JGFHYME2p7RpeMYcoMqooS/ODE-Library-1.0?node-id=12296-6101 */\n/** @design TextFrame/SingleLine https://www.figma.com/design/JGFHYME2p7RpeMYcoMqooS/ODE-Library-1.0?node-id=7870-18042&t=zbZGBrco5ra09mre-4 */\nexport const TextFrameSingleLine = forwardRef<\n  HTMLInputElement,\n  TextFrameSingleLineProps\n>((props, ref) => {\n  const _inputRef = useRef<HTMLInputElement | null>(null);\n  const {\n    hasError = true,\n    autoSelect = false,\n    errorMessage,\n    label = \"\",\n    labelProps,\n    errorProps,\n    $errorColor,\n    ...inputParams\n  } = props;\n  /** @description sync width to label & error if exists inside input style */\n  const width = props.style?.width;\n  const minWidth = props.style?.minWidth;\n  const maxWidth = props.style?.maxWidth;\n  return (\n    <>\n      {!!label && (\n        <FieldLabel\n          {...labelProps}\n          text={label}\n          style={{\n            ...labelDefaultStyles,\n            width,\n            minWidth,\n            maxWidth,\n            ...labelProps?.style,\n          }}\n          $required={inputParams.required}\n        />\n      )}\n      <Input\n        /** @description clear auto complete */\n        autoComplete=\"new-password\"\n        /** @description fix FF & Safari cannot accept decimal and float numbers */\n        step={inputParams.type === \"number\" ? \"any\" : inputParams.step}\n        {...inputParams}\n        style={{ ...inputDefaultStyles, ...inputParams?.style }}\n        $error={!!errorMessage}\n        $errorColor={$errorColor}\n        onFocus={(e) => {\n          if (props.onFocus) props.onFocus(e);\n          if (autoSelect && _inputRef.current) _inputRef.current.select();\n        }}\n        ref={(element) => {\n          _inputRef.current = element;\n          if (!ref) return;\n          if (typeof ref === \"function\") {\n            ref(element);\n            return;\n          }\n          if (\"current\" in ref) ref.current = element;\n        }}\n      />\n      {hasError && (\n        <ErrorTip\n          {...errorProps}\n          style={{ width, minWidth, maxWidth, ...errorProps?.style }}\n          message={props.disabled ? undefined : errorMessage}\n          $errorColor={$errorColor}\n        />\n      )}\n    </>\n  );\n});\n\nexport const Input = styled.input<TextfieldFrameInputStyleProps>`\n  height: 44px;\n  ${textfieldFrameInputStyle}\n  transition: border-color 0.2s ease, color 0.2s ease;\n`;\n\nconst labelDefaultStyles = {\n  display: \"block\",\n  marginBottom: 4,\n} satisfies React.CSSProperties;\n\nconst inputDefaultStyles = {\n  marginBottom: 4,\n} satisfies React.CSSProperties;\n"],"names":["TextFrameSingleLine","forwardRef","props","ref","_inputRef","useRef","hasError","autoSelect","errorMessage","labelProps","errorProps","$errorColor","inputParams","width","_a","minWidth","_b","maxWidth","_c","jsxs","Fragment","label","jsx","FieldLabel","labelDefaultStyles","style","Input","step","inputDefaultStyles","e","element","ErrorTip","styled","input"],"mappings":"kRAqCO,MAAAA,EAAAC,EAAA,WAAA,CAAAC,EAAAC,IAAA,WAIL,MAAAC,EAAAC,SAAA,IAAA,EACA,CAAM,SAAAC,EAAA,GACO,WAAAC,EAAA,GACE,aAAAC,EACbA,MAAAA,EAAAA,GACQ,WAAAC,EACRA,WAAAA,EACAC,YAAAA,EACAC,GAAAA,CACGC,EAAAA,EAGLC,GAAAC,EAAAZ,EAAA,QAAA,YAAAY,EAAA,MACAC,GAAAC,EAAAd,EAAA,QAAA,YAAAc,EAAA,SACAC,GAAAC,EAAAhB,EAAA,QAAA,YAAAgB,EAAA,SACA,OAAAC,EAAA,KAAAC,WAAA,CAAA,SAAA,CAEK,CAAA,CAAAC,GAAAC,EAAAA,IAAAC,EAAA,CAAA,GAAAd,EAAA,KAAAY,EAAA,MAAA,CAIU,GAAAG,EACFA,MAAAA,EACHX,SAAAA,EACAE,SAAAA,EACAE,GAAAA,GAAAA,YAAAA,EAAAA,KACeQ,EAAAA,UAAAA,EAAAA,SAAAA,EAIpBH,EAAA,IACDI,EAAC,CAAA,aAAA,eAEc,KAAAd,EAAA,OAAA,SAAA,MAAAA,EAAA,KAE6Ce,GAAAA,EACtDf,MAAAA,CACG,GAAAgB,EAAKA,GAAAA,GAAAA,YAAAA,EAAAA,KAAoCH,EAAM,OAAA,CAAA,CAAAjB,EAC5CA,YAAAA,EACV,QAAAqB,GAAA,CAEE3B,EAAA,SAAmBA,EAAAA,QAAAA,CAAAA,EACnBK,GAAAH,EAAA,SAAqCA,EAAAA,QAAAA,QAAyB,EAChE,IAAA0B,GAAA,CAGE,GADA1B,EAAAA,QAAAA,EACA,EAAAD,EACA,IAAA,OAAAA,GAAA,WAAA,CACEA,EAAAA,CAAAA,EACA,OAEF,YAAAA,IAAsBA,EAAAA,QAAAA,GAAc2B,CACtC,CAAA,EAAExB,GAAAgB,EAAAA,IAAAS,EAAA,CAAA,GAAArB,EAAA,MAAA,CAKO,MAAAG,EAAEA,SAAAA,EAAOE,SAAAA,EAAUE,GAAAA,GAAAA,YAAAA,EAAAA,KAAyBQ,EAAAA,QAAAA,EAAAA,SAAAA,OAAAA,EAAAA,YAAAA,EAAAA,CAItD,CAAA,CAAA,CAGP,CAAA,EAEOC,EAAAM,EAAA;AAAA;AAAA,IAAqBC;AAAAA;AAAAA,EAM5BT,EAAA,CAA2B,QAAA,QAChB,aAAA,CAEX,EAEAI,EAAA,CAA2B,aAAA,CAE3B"}