{"version":3,"file":"Toast-b8824b9d.js","sources":["../../../paas-library/src/DynamicMenu/components/Toast.tsx"],"sourcesContent":["import { SpringProps, animated, useSpringValue } from \"@react-spring/web\";\nimport { useRef } from \"react\";\nimport { useMount } from \"react-use\";\nimport styled, { css } from \"styled-components\";\nimport { DmIcon20CheckGreen, DmIcon20ErrorRed } from \"../../icons\";\nimport { colors } from \"../../styles/colors\";\nimport { configLinearFast } from \"../common\";\nimport { useDymenuController } from \"../contexts\";\nimport { typography } from \"../themes\";\n\ninterface Props extends React.HTMLAttributes<HTMLDivElement> {\n  keepShowing?: boolean;\n  timeBeforeDisappear?: number;\n  type: \"success\" | \"error\";\n  children: React.ReactNode;\n}\n\n/**\n * Toast component for dymenu, will auto resize the dymenu to fit the toast\n * Total length 2600ms = resize 300ms (if have) + 150 appear + timeBeforeDisappear + 150 disappear\n * @param keepShowing if true, the toast will not disappear automatically\n * @param timeBeforeDisappear time before the toast disappear, in ms, default 2000\n * @param type type of the toast, can be \"success\" or \"error\"\n * @param children content of the toast\n */\nexport const DymenuToast = ({\n  keepShowing,\n  type,\n  timeBeforeDisappear = 2000,\n  children,\n  ...props\n}: Props) => {\n  const controller = useDymenuController();\n  const ref = useRef<HTMLDivElement>(null);\n  const opacity = useSpringValue<number>(0, {\n    config: configLinearFast as SpringProps[\"config\"],\n  });\n  useMount(() => {\n    if (ref.current) {\n      const rect = ref.current.getBoundingClientRect();\n      controller\n        .startSizeTo?.({ width: rect.width, height: rect.height })\n        .then(() => opacity.start(1))\n        .then(() =>\n          keepShowing ? {} : opacity.start(0, { delay: timeBeforeDisappear })\n        );\n    }\n  });\n  return (\n    <Wrapper ref={ref} {...props} style={{ opacity }}>\n      {type === \"success\" ? <IconSuccess /> : <IconError />}\n      {children}\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled(animated.div)`\n  display: flex;\n  align-items: center;\n  padding: 16px 24px;\n  ${typography.dymenu_MenuTitle}\n  white-space: nowrap;\n`;\n\nconst commonIconCSS = css`\n  width: 20px;\n  height: 20px;\n  flex-shrink: 0;\n`;\n\nconst IconSuccess = styled(DmIcon20CheckGreen)`\n  ${commonIconCSS}\n  color: ${colors.Pegreen_300}\n`;\n\nconst IconError = styled(DmIcon20ErrorRed)`\n  ${commonIconCSS}\n  color: ${colors.Errorred_300};\n`;\n"],"names":["DymenuToast","keepShowing","type","children","controller","useDymenuController","ref","useRef","opacity","useSpringValue","configLinearFast","useMount","rect","width","height","timeBeforeDisappear","jsxs","Wrapper","props","styled","animated","typography","commonIconCSS","css","IconSuccess","DmIcon20CheckGreen","IconError","DmIcon20ErrorRed"],"mappings":"yeAyBO,MAAAA,EAAA,CAAA,CAAqB,YAAAC,EAC1BA,KAAAA,EACAC,oBAAAA,EAAAA,IACsB,SAAAC,EACtBA,GAAAA,CAEK,IAAA,CACL,MAAAC,EAAAC,IACAC,EAAAC,SAAA,IAAA,EACAC,EAAAC,EAAA,EAAA,CAA0C,OAAAC,CAChCA,CAAAA,EAEVC,OAAAA,EAAAA,IAAAA,OACE,GAAAL,EAAA,QAAA,CACE,MAAAM,EAAAN,EAAA,QAAA,sBAAA,GACAF,EAAAA,EAAAA,cAAAA,MAAAA,EAAAA,KAAAA,EAAAA,CACiB,MAAAQ,EAAA,MAAcC,OAAAA,EAAAA,MAAoBC,GAAAA,KAAAA,IAAAA,EAAAA,MAAAA,CAAAA,GAAAA,KAAAA,IAAAA,EAAAA,CAAAA,EAAAA,EAAAA,MAAAA,EAAAA,CAGX,MAAAC,CAASA,CAAAA,GAEnD,CAAA,EAEFC,EAAAA,KAAAC,EAAA,CAAA,IAAAX,EAAA,GAAAY,EAAA,MAAA,CACuC,QAAAV,CAAEA,EAAAA,SAAAA,CACpCN,IAAAA,UAAAA,EAAAA,IAAAA,EAAAA,CAAAA,CAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,EAAoDC,CACpDA,CAAAA,CAAAA,CAGP,EAEAc,EAAAE,EAAAC,EAAA,GAAA;AAAA;AAAA;AAAA;AAAA,IAAmCC,EAAA;AAAA;AAAA,EAQnCC,EAAAC;AAAAA;AAAAA;AAAAA;AAAAA,EAMAC,EAAAL,EAAAM,CAAA;AAAA,IAA6CH;AAAA,WACzCA,EAAAA;AAAAA,EAIJI,EAAAP,EAAAQ,CAAA;AAAA,IAAyCL;AAAA,WACrCA,EAAAA;AAAAA;"}