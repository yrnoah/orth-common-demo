{"version":3,"file":"Tooltip-a379440d.js","sources":["../../../paas-library/src/utils/convertAnchor.ts","../../../paas-library/src/Buttons/Tooltip.tsx"],"sourcesContent":["/**\n * Returns a function that clamps a number between 0 and the given maximum value.\n * @currying clamp(LargestNumber)(numberToBeClamped)\n * @param {number} max - The maximum value that the returned function will clamp values to.\n * @param {number} n - The number to be clamped\n * @return {number}\n */\nexport const clamp = (max: number) => (n: number) =>\n  Math.min(max, Math.max(0, n));\n\nexport type TooltipPosition =\n  | \"top-left\"\n  | \"top-right\"\n  | \"bottom-left\"\n  | \"bottom-right\"\n  | \"top\"\n  | \"bottom\"\n  | \"left-top\"\n  | \"left\"\n  | \"left-bottom\"\n  | \"right-top\"\n  | \"right\"\n  | \"right-bottom\";\n\nexport function convertAnchor(\n  rect: DOMRect,\n  position: TooltipPosition | \"top\" | \"bottom\" | \"left\" | \"right\" = \"bottom\",\n  align: \"start\" | \"center\" | \"end\" = \"center\",\n  gap: number = 0\n): React.CSSProperties {\n  // Handle compound positions\n  if (position === \"top-left\") return convertAnchor(rect, \"top\", \"start\", gap);\n  if (position === \"top-right\") return convertAnchor(rect, \"top\", \"end\", gap);\n  if (position === \"bottom-left\")\n    return convertAnchor(rect, \"bottom\", \"start\", gap);\n  if (position === \"bottom-right\")\n    return convertAnchor(rect, \"bottom\", \"end\", gap);\n  if (position === \"left-top\") return convertAnchor(rect, \"left\", \"start\", gap);\n  if (position === \"left-bottom\")\n    return convertAnchor(rect, \"left\", \"end\", gap);\n  if (position === \"right-top\")\n    return convertAnchor(rect, \"right\", \"start\", gap);\n  if (position === \"right-bottom\")\n    return convertAnchor(rect, \"right\", \"end\", gap);\n\n  const vw = window.innerWidth ?? document.body.clientWidth;\n  const vh = window.innerHeight ?? document.body.clientHeight;\n  switch (position) {\n    case \"top\":\n      switch (align) {\n        case \"start\":\n          return { left: rect.x, bottom: clamp(vh)(vh - rect.y + gap) };\n        case \"center\":\n          return {\n            left: clamp(vw)(rect.x + rect.width / 2),\n            transform: \"translateX(-50%)\",\n            bottom: clamp(vh)(vh - rect.y + gap),\n          };\n        case \"end\":\n          return {\n            right: clamp(vw)(vw - rect.x - rect.width),\n            bottom: clamp(vh)(vh - rect.y + gap),\n          };\n        default:\n          return {};\n      }\n    case \"bottom\":\n      switch (align) {\n        case \"start\":\n          return { left: rect.x, top: clamp(vh)(rect.y + rect.height + gap) };\n        case \"center\":\n          return {\n            left: clamp(vw)(rect.x + rect.width / 2),\n            transform: \"translateX(-50%)\",\n            top: clamp(vh)(rect.y + rect.height + gap),\n          };\n        case \"end\":\n          return {\n            right: clamp(vw)(vw - rect.x - rect.width),\n            top: clamp(vh)(rect.y + rect.height + gap),\n          };\n        default:\n          return {};\n      }\n    case \"left\":\n      switch (align) {\n        case \"start\":\n          return {\n            right: clamp(vw)(vw - rect.x + gap),\n            top: rect.y,\n          };\n        case \"center\":\n          return {\n            right: clamp(vw)(vw - rect.x + gap),\n            transform: \"translateY(-50%)\",\n            top: clamp(vh)(rect.y + rect.height / 2),\n          };\n        case \"end\":\n          return {\n            right: clamp(vw)(vw - rect.x + gap),\n            bottom: clamp(vh)(vh - rect.y - rect.height),\n          };\n        default:\n          return {};\n      }\n    case \"right\":\n      switch (align) {\n        case \"start\":\n          return {\n            left: clamp(vw)(rect.x + rect.width + gap),\n            top: rect.y,\n          };\n        case \"center\":\n          return {\n            left: clamp(vw)(rect.x + rect.width + gap),\n            transform: \"translateY(-50%)\",\n            top: clamp(vh)(rect.y + rect.height / 2),\n          };\n        case \"end\":\n          return {\n            left: clamp(vw)(rect.x + rect.width + gap),\n            bottom: clamp(vh)(vh - rect.y - rect.height),\n          };\n        default:\n          return {\n            left: clamp(vw)(rect.x + rect.width + gap),\n            top: rect.y,\n          };\n      }\n  }\n}\n","import { useEffect, useRef, useState } from \"react\";\nimport styled, { css, useTheme } from \"styled-components\";\nimport { convertAnchor, TooltipPosition } from \"../utils/convertAnchor\";\nimport { TooltipPoint } from \"../icons\";\nexport interface TooltipProps {\n  tooltip?: React.ReactNode;\n  parent: React.RefObject<HTMLButtonElement | HTMLDivElement | null>;\n  /**\n   * @default bottom\n   */\n  tooltipPosition?: TooltipPosition;\n  show?: boolean;\n  style?: React.CSSProperties;\n  /** @default 4 */\n  wrapperGap?: number;\n  bubbleColor?: string;\n  /** @default {width:5,height:4} */\n  bubbleSize?: { width: number; height: number };\n  /** @default 12 */\n  bubbleOffset?: number;\n}\n\nconst gap = 4;\n\nexport function Tooltip(props: TooltipProps) {\n  const {\n    tooltip,\n    parent,\n    tooltipPosition = \"bottom\",\n    show,\n    bubbleSize = { width: 5, height: 4 },\n    bubbleOffset = 12,\n    wrapperGap = 4,\n  } = props;\n  const { colors } = useTheme();\n  const tooltipRef = useRef<HTMLDivElement | null>(null);\n  const [fixedPosition, setFixedPosition] = useState<\n    React.CSSProperties | undefined\n  >(undefined);\n  useEffect(() => {\n    const tooltipRect = tooltipRef.current?.getBoundingClientRect();\n    const windowWidth = window.innerWidth ?? document.body.clientWidth;\n    const windowHeight = window.innerHeight ?? document.body.clientHeight;\n    if (tooltipRect?.width) {\n      const fixedStyle: React.CSSProperties = {};\n      // Horizontal boundary checks\n      if (tooltipRect.left < 0) {\n        fixedStyle.left = tooltipRect.left * -1 + gap;\n      }\n      if (tooltipRect.right < 0) {\n        fixedStyle.right = tooltipRect.right * -1 + gap;\n      }\n      const diffRight = tooltipRect.left + tooltipRect.width - windowWidth;\n      if (diffRight > 0) {\n        fixedStyle.right = diffRight + gap * 2;\n      }\n      // Vertical boundary checks\n      if (tooltipRect.top < 0) {\n        fixedStyle.top = tooltipRect.top * -1 + gap;\n      }\n      if (tooltipRect.bottom < 0) {\n        fixedStyle.bottom = tooltipRect.bottom * -1 + gap;\n      }\n      const diffBottom = tooltipRect.top + tooltipRect.height - windowHeight;\n      if (diffBottom > 0) {\n        fixedStyle.bottom = diffBottom + gap * 2;\n      }\n      if (Object.keys(fixedStyle).length > 0) {\n        setFixedPosition(fixedStyle);\n      }\n    }\n  }, []);\n  // const { left, top } = useDropdownPosition(parent.current, tooltipPosition);\n  if (!parent.current) return null;\n  const parentRect = parent.current.getBoundingClientRect();\n  const style = convertAnchor(\n    parentRect,\n    tooltipPosition,\n    \"center\",\n    bubbleSize.height + wrapperGap\n  );\n  let bubbleFixedLeft = 0;\n  if (typeof fixedPosition?.left === \"number\") {\n    bubbleFixedLeft = Math.abs(fixedPosition.left);\n  }\n  if (typeof fixedPosition?.right === \"number\") {\n    bubbleFixedLeft = fixedPosition.right * -1;\n  }\n  return (\n    <FixedWrapper style={style}>\n      <TooltipWrapper\n        ref={tooltipRef}\n        style={{\n          ...(props.style || {}),\n          opacity: show ? 1 : 0,\n          ...(fixedPosition || {}),\n        }}\n      >\n        <Bubble\n          width={bubbleSize.width}\n          height={bubbleSize.height}\n          $position={tooltipPosition}\n          $fixedLeft={bubbleFixedLeft}\n          $bubbleOffset={bubbleOffset}\n          style={{ color: props.bubbleColor || colors.container200 }}\n        />\n        <>{tooltip}</>\n      </TooltipWrapper>\n    </FixedWrapper>\n  );\n}\n\nconst FixedWrapper = styled.div`\n  pointer-events: none;\n  position: fixed;\n  z-index: ${(p) => p.theme.zIndexes.modal + 1};\n`;\n\ninterface BubbleProps {\n  $position: TooltipPosition;\n  $fixedLeft: number;\n  $bubbleOffset: number;\n}\n\n// Helper function to determine the base position for styling\nconst getBasePosition = (\n  position: TooltipPosition\n): \"top\" | \"bottom\" | \"left\" | \"right\" => {\n  if (position.startsWith(\"top\")) return \"top\";\n  if (position.startsWith(\"bottom\")) return \"bottom\";\n  if (position.startsWith(\"left\")) return \"left\";\n  if (position.startsWith(\"right\")) return \"right\";\n  return position as \"top\" | \"bottom\" | \"left\" | \"right\";\n};\nconst Bubble = styled(TooltipPoint)<BubbleProps>`\n  position: absolute;\n\n  ${(p) => {\n    const basePosition = getBasePosition(p.$position);\n    const isCompound = p.$position.includes(\"-\");\n    const offset = p.$bubbleOffset;\n    switch (basePosition) {\n      case \"top\":\n        return css`\n          ${() => {\n            if (isCompound) {\n              if (p.$position.endsWith(\"left\")) {\n                return `left: ${offset}px;`;\n              } else {\n                return `right: ${offset}px;`;\n              }\n            } else {\n              return `left: calc(50% - ${p.$fixedLeft}px);`;\n            }\n          }}\n          bottom: 0.5px;\n          transform: ${() => {\n            if (isCompound) {\n              return \"translate(0, 100%)\";\n            } else {\n              return \"translate(-50%, 100%)\";\n            }\n          }};\n        `;\n      case \"bottom\":\n        return css`\n          ${() => {\n            if (isCompound) {\n              if (p.$position.endsWith(\"left\")) {\n                return `left: ${offset}px;`;\n              } else {\n                return `right: ${offset}px;`;\n              }\n            } else {\n              return `left: calc(50% - ${p.$fixedLeft}px);`;\n            }\n          }}\n          top: 0.5px;\n          transform: ${() => {\n            if (isCompound) {\n              return \"translate(0, -100%) rotate(180deg)\";\n            } else {\n              return \"translate(-50%, -100%) rotate(180deg)\";\n            }\n          }};\n        `;\n      case \"left\":\n        return css`\n          ${() => {\n            if (isCompound) {\n              if (p.$position.endsWith(\"top\")) {\n                return `top: ${offset}px;`;\n              } else {\n                return `bottom: ${offset}px;`;\n              }\n            } else {\n              return \"top: 50%;\";\n            }\n          }}\n          right: 1.5px;\n          transform: ${() => {\n            if (isCompound) {\n              return \"translate(100%, 0) rotate(-90deg)\";\n            } else {\n              return \"translate(100%, -50%) rotate(-90deg)\";\n            }\n          }};\n        `;\n      case \"right\":\n        return css`\n          ${() => {\n            if (isCompound) {\n              if (p.$position.endsWith(\"top\")) {\n                return `top: ${offset}px;`;\n              } else {\n                return `bottom: ${offset}px;`;\n              }\n            } else {\n              return \"top: 50%;\";\n            }\n          }}\n          left: 1.5px;\n          transform: ${() => {\n            if (isCompound) {\n              return \"translate(-100%, 0) rotate(90deg)\";\n            } else {\n              return \"translate(-100%, -50%) rotate(90deg)\";\n            }\n          }};\n        `;\n      default:\n        return css`\n          left: calc(50% - ${p.$fixedLeft}px);\n          top: 0.5px;\n          transform: translate(-50%, -100%);\n        `;\n    }\n  }}\n`;\n\nconst TooltipWrapper = styled.div`\n  width: fit-content;\n  position: relative;\n  ${(p) => p.theme.fonts.Default}\n  ${(p) => p.theme.flex.row}\n  ${(p) => p.theme.flex.center}\n  z-index: ${(p) => p.theme.zIndexes.modal + 1};\n  color: ${(p) => p.theme.colors.elementsContentMain};\n  background-color: ${(p) => p.theme.colors.container200};\n  gap: 6px;\n  padding: 8px;\n  border-radius: 8px;\n  box-shadow: ${(p) => p.theme.colors.shadowPop};\n`;\n"],"names":["clamp","max","n","Math","min","convertAnchor","rect","position","align","gap","vw","window","innerWidth","document","body","clientWidth","vh","innerHeight","clientHeight","left","x","bottom","y","width","transform","right","top","height","Tooltip","props","tooltip","parent","show","bubbleOffset","wrapperGap","colors","tooltipRef","useRef","fixedPosition","setFixedPosition","useState","useEffect","tooltipRect","_a","windowWidth","windowHeight","fixedStyle","diffRight","diffBottom","parentRect","style","tooltipPosition","bubbleSize","bubbleFixedLeft","jsx","FixedWrapper","jsxs","TooltipWrapper","Bubble","container200","Fragment","styled","div","getBasePosition","TooltipPoint","p","basePosition","isCompound","offset","css","$fixedLeft","Default","row","center","elementsContentMain"],"mappings":"mNAOO,MAAMA,EAASC,GAAiBC,GACrCC,KAAKC,IAAIH,EAAKE,KAAKF,IAAI,EAAGC,CAAC,CAAC,EAgBvB,SAASG,EACdC,EACAC,EAAkE,SAClEC,EAAoC,SACpCC,EAAc,EACO,CAErB,GAAIF,IAAa,WAAY,OAAOF,EAAcC,EAAM,MAAO,QAASG,CAAG,EAC3E,GAAIF,IAAa,YAAa,OAAOF,EAAcC,EAAM,MAAO,MAAOG,CAAG,EAC1E,GAAIF,IAAa,cACf,OAAOF,EAAcC,EAAM,SAAU,QAASG,CAAG,EACnD,GAAIF,IAAa,eACf,OAAOF,EAAcC,EAAM,SAAU,MAAOG,CAAG,EACjD,GAAIF,IAAa,WAAY,OAAOF,EAAcC,EAAM,OAAQ,QAASG,CAAG,EAC5E,GAAIF,IAAa,cACf,OAAOF,EAAcC,EAAM,OAAQ,MAAOG,CAAG,EAC/C,GAAIF,IAAa,YACf,OAAOF,EAAcC,EAAM,QAAS,QAASG,CAAG,EAClD,GAAIF,IAAa,eACf,OAAOF,EAAcC,EAAM,QAAS,MAAOG,CAAG,EAEhD,MAAMC,EAAKC,OAAOC,YAAcC,SAASC,KAAKC,YACxCC,EAAKL,OAAOM,aAAeJ,SAASC,KAAKI,aAC/C,OAAQX,EAAQ,CACd,IAAK,MACH,OAAQC,EAAK,CACX,IAAK,QACI,MAAA,CAAEW,KAAMb,EAAKc,EAAGC,OAAQrB,EAAMgB,CAAE,EAAEA,EAAKV,EAAKgB,EAAIb,CAAG,CAAA,EAC5D,IAAK,SACI,MAAA,CACLU,KAAMnB,EAAMU,CAAE,EAAEJ,EAAKc,EAAId,EAAKiB,MAAQ,CAAC,EACvCC,UAAW,mBACXH,OAAQrB,EAAMgB,CAAE,EAAEA,EAAKV,EAAKgB,EAAIb,CAAG,CAAA,EAEvC,IAAK,MACI,MAAA,CACLgB,MAAOzB,EAAMU,CAAE,EAAEA,EAAKJ,EAAKc,EAAId,EAAKiB,KAAK,EACzCF,OAAQrB,EAAMgB,CAAE,EAAEA,EAAKV,EAAKgB,EAAIb,CAAG,CAAA,EAEvC,QACE,MAAO,EACX,CACF,IAAK,SACH,OAAQD,EAAK,CACX,IAAK,QACI,MAAA,CAAEW,KAAMb,EAAKc,EAAGM,IAAK1B,EAAMgB,CAAE,EAAEV,EAAKgB,EAAIhB,EAAKqB,OAASlB,CAAG,CAAA,EAClE,IAAK,SACI,MAAA,CACLU,KAAMnB,EAAMU,CAAE,EAAEJ,EAAKc,EAAId,EAAKiB,MAAQ,CAAC,EACvCC,UAAW,mBACXE,IAAK1B,EAAMgB,CAAE,EAAEV,EAAKgB,EAAIhB,EAAKqB,OAASlB,CAAG,CAAA,EAE7C,IAAK,MACI,MAAA,CACLgB,MAAOzB,EAAMU,CAAE,EAAEA,EAAKJ,EAAKc,EAAId,EAAKiB,KAAK,EACzCG,IAAK1B,EAAMgB,CAAE,EAAEV,EAAKgB,EAAIhB,EAAKqB,OAASlB,CAAG,CAAA,EAE7C,QACE,MAAO,EACX,CACF,IAAK,OACH,OAAQD,EAAK,CACX,IAAK,QACI,MAAA,CACLiB,MAAOzB,EAAMU,CAAE,EAAEA,EAAKJ,EAAKc,EAAIX,CAAG,EAClCiB,IAAKpB,EAAKgB,CAAAA,EAEd,IAAK,SACI,MAAA,CACLG,MAAOzB,EAAMU,CAAE,EAAEA,EAAKJ,EAAKc,EAAIX,CAAG,EAClCe,UAAW,mBACXE,IAAK1B,EAAMgB,CAAE,EAAEV,EAAKgB,EAAIhB,EAAKqB,OAAS,CAAC,CAAA,EAE3C,IAAK,MACI,MAAA,CACLF,MAAOzB,EAAMU,CAAE,EAAEA,EAAKJ,EAAKc,EAAIX,CAAG,EAClCY,OAAQrB,EAAMgB,CAAE,EAAEA,EAAKV,EAAKgB,EAAIhB,EAAKqB,MAAM,CAAA,EAE/C,QACE,MAAO,EACX,CACF,IAAK,QACH,OAAQnB,EAAK,CACX,IAAK,QACI,MAAA,CACLW,KAAMnB,EAAMU,CAAE,EAAEJ,EAAKc,EAAId,EAAKiB,MAAQd,CAAG,EACzCiB,IAAKpB,EAAKgB,CAAAA,EAEd,IAAK,SACI,MAAA,CACLH,KAAMnB,EAAMU,CAAE,EAAEJ,EAAKc,EAAId,EAAKiB,MAAQd,CAAG,EACzCe,UAAW,mBACXE,IAAK1B,EAAMgB,CAAE,EAAEV,EAAKgB,EAAIhB,EAAKqB,OAAS,CAAC,CAAA,EAE3C,IAAK,MACI,MAAA,CACLR,KAAMnB,EAAMU,CAAE,EAAEJ,EAAKc,EAAId,EAAKiB,MAAQd,CAAG,EACzCY,OAAQrB,EAAMgB,CAAE,EAAEA,EAAKV,EAAKgB,EAAIhB,EAAKqB,MAAM,CAAA,EAE/C,QACS,MAAA,CACLR,KAAMnB,EAAMU,CAAE,EAAEJ,EAAKc,EAAId,EAAKiB,MAAQd,CAAG,EACzCiB,IAAKpB,EAAKgB,CAAAA,CAEhB,CACJ,CACF,CC5GA,MAAAb,EAAA,EAEO,SAAAmB,EAAAC,EAAA,CACL,KAAA,CAAM,QAAAC,EACJA,OAAAA,EACAC,gBAAAA,EAAAA,SACkB,KAAAC,EAClBA,WAAAA,EAAAA,CACa,MAAA,EAAS,OAAA,CAAW,EAAE,aAAAC,EAAA,GACpB,WAAAC,EAAA,CACF,EAAAL,EAEf,CAAM,OAAAM,CAAEA,EAAAA,EAAAA,EACRC,EAAAC,SAAA,IAAA,EACA,CAAAC,EAAAC,CAAA,EAAAC,EAAAA,SAAA,MAAA,EAqCA,GAlCAC,EAAAA,UAAAA,IAAAA,OACE,MAAAC,GAAAC,EAAAP,EAAA,UAAA,YAAAO,EAAA,wBACAC,EAAA,OAAA,YAAA,SAAA,KAAA,YACAC,EAAA,OAAA,aAAA,SAAA,KAAA,aACA,GAAAH,GAAA,MAAAA,EAAA,MAAA,CACE,MAAAI,EAAA,CAAA,EAEAJ,EAAA,KAAA,IACEI,EAAAA,KAAAA,EAAAA,KAAAA,GAAAA,GAEFJ,EAAA,MAAA,IACEI,EAAAA,MAAAA,EAAAA,MAAAA,GAAAA,GAEF,MAAAC,EAAAL,EAAA,KAAAA,EAAA,MAAAE,EACAG,EAAA,IACED,EAAAA,MAAAA,EAAAA,EAAAA,GAGFJ,EAAA,IAAA,IACEI,EAAAA,IAAAA,EAAAA,IAAAA,GAAAA,GAEFJ,EAAA,OAAA,IACEI,EAAAA,OAAAA,EAAAA,OAAAA,GAAAA,GAEF,MAAAE,EAAAN,EAAA,IAAAA,EAAA,OAAAG,EACAG,EAAA,IACEF,EAAAA,OAAAA,EAAAA,EAAAA,GAEF,OAAA,KAAAA,CAAA,EAAA,OAAA,GACEP,EAAAA,CAAAA,EAEJ,EAAA,CAAA,CAAA,EAGF,CAAAR,EAAA,QAAqB,OAAA,KACrB,MAAAkB,EAAAlB,EAAA,QAAA,sBAAA,EACAmB,EAAA7C,EAAA4C,EAAAE,EAAA,SAAAC,EAAA,OAAAlB,CAAA,EAMA,IAAAmB,EAAA,EACA,OAAA,OAAAf,GAAA,YAAAA,EAAA,OAAA,WACEe,EAAAA,KAAAA,IAAAA,EAAAA,IAAAA,GAEF,OAAAf,GAAA,YAAAA,EAAA,QAAA,WACEe,EAAAA,EAAAA,MAAAA,IAEFC,MAAAC,EAAA,CAAA,MAAAL,EAAA,SAAAM,OAAAC,EAAA,CAAA,IAAArB,EAAA,MAAA,CAIa,GAAAP,EAAA,OAAA,CAAA,EACe,QAAAG,EAAA,EAAA,EACA,GAAAM,GAAA,CAAA,CACE,EAAA,SAAA,CAGxBgB,EAAA,IAAAI,EAAA,CAAA,MAAAN,EAAA,MAAA,OAAAA,EAAA,OAAA,UAAAD,EAAA,WAAAE,EAAA,cAAApB,EAAA,MAAA,CAMS,MAAAJ,EAAA,aAAAM,EAAA,YAAqCwB,EAAAA,EAAeL,EAAAA,IAAAM,EAAA,SAAA,CAAA,SAAA9B,CAAA,CAAA,CAElD,CAAA,CAAA,CAAA,CAAA,CAInB,CAEA,MAAAyB,EAAAM,EAAA;AAAA;AAAA;AAAA,aAA4BC,GAAAA,EAAAA,MAAAA,SAAAA,MAAAA;AAAAA,EAa5BC,EAAAxD,GAGEA,EAAA,WAAA,KAAA,EAAgC,MAChCA,EAAA,WAAA,QAAA,EAAmC,SACnCA,EAAA,WAAA,MAAA,EAAiC,OACjCA,EAAA,WAAA,OAAA,EAAkC,QAClCA,EAEFmD,EAAAG,EAAAG,CAAA;AAAA;AAAA;AAAA,IAAkCC,GAAA,CAI9B,MAAAC,EAAAH,EAAAE,EAAA,SAAA,EACAE,EAAAF,EAAA,UAAA,SAAA,GAAA,EACAG,EAAAH,EAAA,cACA,OAAAC,EAAA,CAAoB,IAAA,MAEhB,OAAAG;AAAAA,YAAOA,IAEHF,EACEF,EAAA,UAAA,SAAA,MAAA,EACE,SAAAG,OAEA,UAAAA,OAGF,oBAAAH,EAAA;AAAA;AAAA,uBAEJ,IAGEE,EACE,qBAEA;AAAA,UAEJ,IAAA,SAGF,OAAAE;AAAAA,YAAOA,IAEHF,EACEF,EAAA,UAAA,SAAA,MAAA,EACE,SAAAG,OAEA,UAAAA,OAGF,oBAAAH,EAAA;AAAA;AAAA,uBAEJ,IAGEE,EACE,qCAEA;AAAA,UAEJ,IAAA,OAGF,OAAAE;AAAAA,YAAOA,IAEHF,EACEF,EAAA,UAAA,SAAA,KAAA,EACE,QAAAG,OAEA,WAAAA,OAGF;AAAA;AAAA,uBAEJ,IAGED,EACE,oCAEA;AAAA,UAEJ,IAAA,QAGF,OAAAE;AAAAA,YAAOA,IAEHF,EACEF,EAAA,UAAA,SAAA,KAAA,EACE,QAAAG,OAEA,WAAAA,OAGF;AAAA;AAAA,uBAEJ,IAGED,EACE,oCAEA;AAAA,UAEJ,QAGF,OAAAE;AAAAA,6BAAOA,EAAAA;AAAAA;AAAAA;AAAAA,SACgBC,CAK7B;AAAA,EAGFb,EAAAI,EAAA;AAAA;AAAA;AAAA,IAA8BC,GAAAA,EAAAA,MAAAA,MAAAA;AAAAA,IAGLS,GAAAA,EAAAA,MAAAA,KAAAA;AAAAA,IACDC,GAAAA,EAAAA,MAAAA,KAAAA;AAAAA,aACAC,GAAAA,EAAAA,MAAAA,SAAAA,MAAAA;AAAAA,WACqBR,GAAAA,EAAA,MAAA,OAAA;AAAA,sBACZS,GAAAA,EAAAA,MAAAA,OAAAA;AAAAA;AAAAA;AAAAA;AAAAA,gBACWf,GAAAA,EAAAA,MAAAA,OAAAA;AAAAA"}