{"version":3,"file":"Trigger-e44b4f5c.js","sources":["../../../paas-library/src/Dropdown/Selection/Trigger.tsx"],"sourcesContent":["import { forwardRef, useState } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { IconArrowSm } from \"../../icons\";\n\nexport interface PropertiesSelectionTriggerProps\n  extends React.ComponentPropsWithRef<\"button\"> {\n  /** @description if selection options is open */\n  $open?: boolean;\n  /** @description display text */\n  $text?: string;\n  /** @description when selected not provided and $placeholder existed, render $placeholder */\n  $placeholder?: string;\n  /**\n   * @default \"small\"\n   * @description only effect height currently;\n   * default width 136;\n   * when small height = 24;\n   * when medium height = 32\n   */\n  $size?: \"small\" | \"medium\";\n  /**\n   * @description Slot for custom nodes, usually use $text will be fine.\n   * String type children with `TextContainer` has conflict with $text, so it's blocked when $text exists;\n   */\n  children?: React.ReactNode;\n}\n\n/** @design https://www.figma.com/design/JGFHYME2p7RpeMYcoMqooS/ODE-Library-1.0?node-id=5528-41514&t=J9rabVBDwI2Vbsh4-4 */\nexport const SelectionTrigger = forwardRef<\n  HTMLButtonElement,\n  PropertiesSelectionTriggerProps\n>((props, ref) => {\n  const { $text, $placeholder, children, $open, ...buttonProps } = props;\n  const [_open, setOpen] = useState(() => !!$open);\n  const open = typeof $open === \"boolean\" ? $open : _open;\n  const showPlaceholder = !$text && !children && !!$placeholder;\n  return (\n    <Trigger\n      {...buttonProps}\n      $open={open}\n      onClick={(e) => {\n        buttonProps.onClick?.(e);\n        setOpen(!open);\n      }}\n      ref={ref}\n    >\n      {showPlaceholder && (\n        <TextContainer isPlaceholder>{$placeholder}</TextContainer>\n      )}\n      {!!$text && <TextContainer>{$text}</TextContainer>}\n      {!$text && typeof children === \"string\" && (\n        <TextContainer>{children}</TextContainer>\n      )}\n      {typeof children !== \"string\" && children}\n      <TriggerIcon />\n    </Trigger>\n  );\n});\n\nconst selectionAttributes = { type: \"button\", role: \"select\" } as const;\ntype TriggerProps = Pick<PropertiesSelectionTriggerProps, \"$open\" | \"$size\">;\n\nexport const Trigger = styled.button.attrs(selectionAttributes)<TriggerProps>`\n  ${(p) => p.theme.flex.row}\n  ${(p) => p.theme.ellipsis}\n  ${(p) => p.theme.fonts[\"Caption-Large/Regular\"]}\n  outline: none;\n  border: none;\n  color: ${(p) => p.theme.colors.textInput.default};\n  background-color: ${(p) => p.theme.colors.themeColor.Airblue1};\n  width: 136px;\n  height: ${(p) => getHeight(p.$size)}px;\n  align-items: center;\n  justify-content: flex-start;\n  text-align: left;\n  position: relative;\n  padding-left: 8px;\n  padding-right: 36px;\n  overflow: hidden;\n  border-radius: ${(p) => p.theme.radius.xxxs}px;\n  gap: 4px;\n  transition: background-color 0.2s ease, color 0.2s ease;\n\n  &:hover {\n    background-color: ${(p) => p.theme.colors.themeColor.Airblue2};\n  }\n\n  ${({ $open, disabled }) => {\n    if ($open && !disabled) {\n      return css`\n        ${TriggerIcon} {\n          transform: translateY(-50%) rotate(-180deg);\n        }\n      `;\n    }\n    return undefined;\n  }}\n\n  &:disabled {\n    color: ${(p) => p.theme.colors.buttonInput.disabled};\n    background-color: ${(p) => p.theme.colors.button.disabled};\n    cursor: not-allowed;\n  }\n`;\n\nexport const TriggerIcon = styled(IconArrowSm).attrs({ width: 16, height: 16 })`\n  pointer-events: none;\n  position: absolute;\n  top: 50%;\n  right: 10px;\n  transform: translateY(-50%) rotate(0deg);\n  transition: transform 0.4s ease;\n`;\n\nexport const TextContainer = styled.span<{ isPlaceholder?: boolean }>`\n  display: inline-block;\n  width: 100%;\n  ${(p) => p.theme.ellipsis}\n  text-align: left;\n\n  ${({ isPlaceholder, theme: { colors } }) =>\n    isPlaceholder &&\n    css`\n      color: ${colors.textInput.minor};\n    `}\n`;\n\nfunction getHeight(size: PropertiesSelectionTriggerProps[\"$size\"]) {\n  if (size === \"small\") return 24;\n  if (size === \"medium\") return 32;\n  return 24;\n}\n\nexport const Input = styled.input`\n  position: absolute;\n  top: 50%;\n  transform: translateY(-50%);\n  left: 0;\n  width: calc(100% - 36px);\n  border: none;\n  outline: none;\n  padding: 0;\n  padding-left: ${(p) => p.theme.padding.xxs}px;\n  ${(p) => p.theme.fonts[\"Caption-Large/Regular\"]}\n  background: transparent;\n  color: ${(p) => p.theme.colors.textInput.default};\n  caret-color: ${(p) => p.theme.colors.textInput.link};\n\n  &::selection {\n    background: ${(p) => p.theme.colors.brandColor.Primary2};\n  }\n\n  &::placeholder {\n    color: ${(p) => p.theme.colors.textInput.minor};\n  }\n\n  &:disabled {\n    color: ${(p) => p.theme.colors.textInput.minor};\n  }\n`;\n"],"names":["SelectionTrigger","forwardRef","props","ref","$text","$placeholder","children","$open","buttonProps","_open","setOpen","useState","open","showPlaceholder","jsxs","Trigger","e","jsx","TextContainer","selectionAttributes","styled","p","row","ellipsis","default","Airblue1","xxxs","Airblue2","disabled","css","TriggerIcon","IconArrowSm","span","isPlaceholder","colors","getHeight","size","Input","input","xxs","link","Primary2","minor"],"mappings":"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"}