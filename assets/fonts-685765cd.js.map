{"version":3,"file":"fonts-685765cd.js","sources":["../../../paas-library/src/styles/fonts.ts"],"sourcesContent":["import type { FlattenSimpleInterpolation } from \"styled-components\";\nimport { css } from \"styled-components\";\ntype TFontsStyles = Pick<\n  React.CSSProperties,\n  \"fontFamily\" | \"fontSize\" | \"fontWeight\" | \"lineHeight\" | \"letterSpacing\"\n>;\n\nexport const fontFamily = `\"Be Vietnam Pro\", \"Helvetica Neue\", sans-serif`;\n\nexport const bodyRegular = {\n  fontFamily,\n  fontSize: 14,\n  fontWeight: 400,\n  lineHeight: 1.7,\n  letterSpacing: -0.011,\n} as const satisfies TFontsStyles;\n\nexport const bodyLight = {\n  fontFamily,\n  fontSize: 14,\n  fontWeight: 200,\n  lineHeight: 1.57,\n  letterSpacing: -0.011,\n} as const satisfies TFontsStyles;\n\nexport const caption = {\n  fontFamily,\n  fontSize: 10,\n  lineHeight: 1.6,\n  letterSpacing: -0.011,\n} as const satisfies TFontsStyles;\n\nexport const button = {\n  fontFamily,\n  fontSize: 12,\n  lineHeight: 1.6,\n  fontWeight: 700,\n  letterSpacing: -0.011,\n} as const satisfies TFontsStyles;\n\nexport const header = {\n  fontFamily: \"Poppins\",\n  fontSize: 12,\n  lineHeight: \"18px\",\n  fontWeight: 500,\n} as const satisfies TFontsStyles;\n\nexport const text = {\n  fontFamily,\n  fontSize: 12,\n  lineHeight: \"18px\",\n} as const satisfies TFontsStyles;\nexport const paasCaption = {\n  fontFamily,\n  fontSize: 10,\n  lineHeight: 1,\n} as const satisfies TFontsStyles;\n\nexport const fontStyleDict = {\n  bodyRegular,\n  bodyLight,\n  caption,\n  header,\n  button,\n  text,\n  paasCaption,\n} as const;\n\n/** @type FlattenSimpleInterpolation */\nfunction createFont(font: TFontsStyles): FlattenSimpleInterpolation {\n  return css`\n    font-family: ${font.fontFamily};\n    font-size: ${font.fontSize}px;\n    font-weight: ${font.fontWeight};\n    line-height: ${font.lineHeight};\n    ${typeof font.letterSpacing === \"number\"\n      ? `letter-spacing: ${font.letterSpacing}em;`\n      : undefined}\n  `;\n}\n/** @description for easy to use, rest font css type to font style type */\nexport const fontsCSS = {\n  bodyRegular: createFont(bodyRegular) as unknown as typeof bodyRegular,\n  bodyLight: createFont(bodyLight) as unknown as typeof bodyLight,\n  caption: createFont(caption) as unknown as typeof caption,\n  header: createFont(header) as unknown as typeof header,\n  button: createFont(button) as unknown as typeof button,\n  text: createFont(text) as unknown as typeof text,\n  paasCaption: createFont(paasCaption) as unknown as typeof paasCaption,\n} as const;\n"],"names":["fontFamily","bodyRegular","fontSize","fontWeight","lineHeight","letterSpacing","bodyLight","caption","button","header","text","paasCaption","fontStyleDict","createFont","font","css","undefined","fontsCSS"],"mappings":"gEAOO,MAAMA,EAAc,iDAEdC,EAAc,CACzBD,WAAAA,EACAE,SAAU,GACVC,WAAY,IACZC,WAAY,IACZC,cAAe,KACjB,EAEaC,EAAY,CACvBN,WAAAA,EACAE,SAAU,GACVC,WAAY,IACZC,WAAY,KACZC,cAAe,KACjB,EAEaE,EAAU,CACrBP,WAAAA,EACAE,SAAU,GACVE,WAAY,IACZC,cAAe,KACjB,EAEaG,EAAS,CACpBR,WAAAA,EACAE,SAAU,GACVE,WAAY,IACZD,WAAY,IACZE,cAAe,KACjB,EAEaI,EAAS,CACpBT,WAAY,UACZE,SAAU,GACVE,WAAY,OACZD,WAAY,GACd,EAEaO,EAAO,CAClBV,WAAAA,EACAE,SAAU,GACVE,WAAY,MACd,EACaO,EAAc,CACzBX,WAAAA,EACAE,SAAU,GACVE,WAAY,CACd,EAEaQ,EAAgB,CAC3BX,YAAAA,EACAK,UAAAA,EACAC,QAAAA,EACAE,OAAAA,EACAD,OAAAA,EACAE,KAAAA,EACAC,YAAAA,CACF,EAGA,SAASE,EAAWC,EAAgD,CAC3DC,OAAAA;AAAAA,mBACUD,EAAKd;AAAAA,iBACPc,EAAKZ;AAAAA,mBACHY,EAAKX;AAAAA,mBACLW,EAAKV;AAAAA,MAClB,OAAOU,EAAKT,eAAkB,SAC3B,mBAAkBS,EAAKT,mBACxBW;AAAAA,GAER,CAEO,MAAMC,EAAW,CACtBhB,YAAaY,EAAWZ,CAAW,EACnCK,UAAWO,EAAWP,CAAS,EAC/BC,QAASM,EAAWN,CAAO,EAC3BE,OAAQI,EAAWJ,CAAM,EACzBD,OAAQK,EAAWL,CAAM,EACzBE,KAAMG,EAAWH,CAAI,EACrBC,YAAaE,EAAWF,CAAW,CACrC"}